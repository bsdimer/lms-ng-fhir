/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DomainResource } from '../domain-resource';
var Contract = /** @class */ (function (_super) {
    tslib_1.__extends(Contract, _super);
    function Contract() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.resourceType = 'Contract';
        return _this;
    }
    return Contract;
}(DomainResource));
export { Contract };
if (false) {
    /** @type {?} */
    Contract.prototype.resourceType;
    /** @type {?} */
    Contract.prototype.identifier;
    /** @type {?} */
    Contract.prototype.url;
    /** @type {?} */
    Contract.prototype.version;
    /** @type {?} */
    Contract.prototype.status;
    /** @type {?} */
    Contract.prototype.legalState;
    /** @type {?} */
    Contract.prototype.instantiatesCanonical;
    /** @type {?} */
    Contract.prototype.instantiatesUri;
    /** @type {?} */
    Contract.prototype.contentDerivative;
    /** @type {?} */
    Contract.prototype.issued;
    /** @type {?} */
    Contract.prototype.applies;
    /** @type {?} */
    Contract.prototype.expirationType;
    /** @type {?} */
    Contract.prototype.subject;
    /** @type {?} */
    Contract.prototype.authority;
    /** @type {?} */
    Contract.prototype.domain;
    /** @type {?} */
    Contract.prototype.site;
    /** @type {?} */
    Contract.prototype.name;
    /** @type {?} */
    Contract.prototype.title;
    /** @type {?} */
    Contract.prototype.subtitle;
    /** @type {?} */
    Contract.prototype.alias;
    /** @type {?} */
    Contract.prototype.author;
    /** @type {?} */
    Contract.prototype.scope;
    /** @type {?} */
    Contract.prototype.topicCodeableConcept;
    /** @type {?} */
    Contract.prototype.topicReference;
    /** @type {?} */
    Contract.prototype.type;
    /** @type {?} */
    Contract.prototype.subType;
    /** @type {?} */
    Contract.prototype.contentDefinition;
    /** @type {?} */
    Contract.prototype.term;
    /** @type {?} */
    Contract.prototype.supportingInfo;
    /** @type {?} */
    Contract.prototype.relevantHistory;
    /** @type {?} */
    Contract.prototype.signer;
    /** @type {?} */
    Contract.prototype.friendly;
    /** @type {?} */
    Contract.prototype.legal;
    /** @type {?} */
    Contract.prototype.rule;
    /** @type {?} */
    Contract.prototype.legallyBindingAttachment;
    /** @type {?} */
    Contract.prototype.legallyBindingReference;
}
//# sourceMappingURL=data:application/json;base64,