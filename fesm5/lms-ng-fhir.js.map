{"version":3,"file":"lms-ng-fhir.js","sources":["ng://lms-ng-fhir/lib/fhir/fhir-config.ts","ng://lms-ng-fhir/lib/fhir/r4/model/element.ts","ng://lms-ng-fhir/lib/fhir/r4/model/resource.ts","ng://lms-ng-fhir/lib/fhir/r4/model/domain-resource.ts","ng://lms-ng-fhir/lib/fhir/r4/model/meta.ts","ng://lms-ng-fhir/lib/fhir/r4/model/extension.ts","ng://lms-ng-fhir/lib/fhir/r4/model/narrative.ts","ng://lms-ng-fhir/lib/fhir/r4/model/period.ts","ng://lms-ng-fhir/lib/fhir/r4/model/range.ts","ng://lms-ng-fhir/lib/fhir/r4/model/reference.ts","ng://lms-ng-fhir/lib/fhir/r4/model/ratio.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/humanname.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/person.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/address.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/attachment.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/group.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/patient.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/practitioner.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/practitionerrole.ts","ng://lms-ng-fhir/lib/fhir/r4/model/individuals/relatedperson.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/backboneelement.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/codeableconcept.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/codesystem.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/codesystemconcept.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/coding.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/conceptmap.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/conceptmapdependson.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/contactdetail.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/contactpoint.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/identifier.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/namingsystem.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/quantity.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/simple-quantity.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/terminologycapabilities.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/usagecontext.ts","ng://lms-ng-fhir/lib/fhir/r4/model/terminology/valueset.ts","ng://lms-ng-fhir/lib/fhir/r4/model/conformance/capability-statement.ts","ng://lms-ng-fhir/lib/fhir/r4/model/misc/bundle.ts","ng://lms-ng-fhir/lib/fhir/r4/model/misc/bundle-entry.ts","ng://lms-ng-fhir/lib/fhir/r4/model/management/encounter.ts","ng://lms-ng-fhir/lib/fhir/r4/model/management/episodeofcare.ts","ng://lms-ng-fhir/lib/fhir/r4/model/management/flag.ts","ng://lms-ng-fhir/lib/fhir/r4/model/management/library.ts","ng://lms-ng-fhir/lib/fhir/r4/model/management/list.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/dosage.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/duration.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication-administration.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication-dispense.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication-knowledge.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication-request.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication-statement.ts","ng://lms-ng-fhir/lib/fhir/r4/model/medications/medication.ts","ng://lms-ng-fhir/lib/fhir/r4/model/money.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_1/endpoint.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_1/healthcareservice.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_1/location.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_1/organization.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_1/organizationaffiliation.ts","ng://lms-ng-fhir/lib/fhir/r4/model/general/account.ts","ng://lms-ng-fhir/lib/fhir/r4/model/general/coverage.ts","ng://lms-ng-fhir/lib/fhir/r4/model/general/contract.ts","ng://lms-ng-fhir/lib/fhir/r4/model/general/chargeItemDefinition.ts","ng://lms-ng-fhir/lib/fhir/r4/model/signature.ts","ng://lms-ng-fhir/lib/fhir/r4/model/other/operation-outcome.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/annotation.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/appointment.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/appointmentresponse.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/schedule.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/slot.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/task.ts","ng://lms-ng-fhir/lib/fhir/r4/model/workflow/verificationresult.ts","ng://lms-ng-fhir/lib/fhir/r4/model/timing.ts","ng://lms-ng-fhir/lib/fhir/r4/model/entities_2/substance.ts","ng://lms-ng-fhir/lib/fhir/r4/model/billing/invoice.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-service.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-advanced.service.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-address-line-extract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-contact-extract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-dosage-exctract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-email-extract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-patient-name-extract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-telecom-phone-extract.pipe.ts","ng://lms-ng-fhir/lib/fhir/r4/fhir-pipes/fhir-telecom-web-extract.pipe.ts","ng://lms-ng-fhir/lib/lms-ng-fhir.module.ts","ng://lms-ng-fhir/lib/fhir/r4/query-builder/fhir-query-builder.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/search-item.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/modifiers/equal-search-modifier.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/modifiers/string-contains-search-modifier.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/modifiers/string-exact-search-modifier.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/search-modifiers.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/search-modifier.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/search-set-builder.ts","ng://lms-ng-fhir/lib/fhir/r4/search-set/search-set.ts","ng://lms-ng-fhir/lib/fhir/r4/resource-types.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\nimport {Injectable} from '@angular/core';\n\nexport const FHIR_CONFIG = new InjectionToken<FhirConfig>('FhirConfig');\n\n@Injectable(\n    // { guess this doesn`t work, so you have to provide it in the appModule\n    //     providedIn: 'root',\n    // },\n)\nexport class FhirConfig {\n    base: string;\n    fhircqrs: string;\n}\n","import { Extension } from './extension';\n\nexport class Element {\n  id?: string;\n  extension?: Extension[];\n}\n","import { Meta } from './meta';\n\nexport class Resource {\n  id?: string; // Regex: [A-Za-z0-9\\-\\.]{1,64}\n  meta?: Meta;\n  implicitRules?: string; // uri\n  language?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n  resourceType?: string;\n  versionId?: string;\n  lastUpdated?: string;\n}\n","import {Resource} from './resource';\nimport {Extension} from './extension';\n\nexport class DomainResource extends Resource {\n    text?: string;\n    contained?: Resource[];\n    extension?: Extension[];\n    modifierExtension?: Extension[];\n}\n","import { Extension } from './extension';\nimport {Element} from './element';\n\nexport class Meta extends Element {\n  id: string;\n  extension?: Extension[];\n}\n","export class Extension {\n    url: string;\n    valueString?: string;\n    valueInteger?: number;\n    valueDecimal?: number;\n    valuePositiveInt?: number;\n    valueUnsignedInt?: number;\n\n    /*valueBase64Binary: base64Binary\n    valueBoolean: boolean\n    valueCanonical: canonical\n    valueCode: code (only if the extension definition provides a fixed binding to a suitable set of codes)\n    valueDate: date\n    valueDateTime: dateTime\n    valueId: id\n    valueInstant: instant\n    valueMarkdown: markdown\n    valueOid: oid\n    valueString: string\n    valueTime: time\n    valueUri: uri\n    valueUrl: url\n    valueUuid: uuid\n    valueAddress: Address\n    valueAge: Age\n    valueAnnotation: Annotation\n    valueAttachment: Attachment\n    valueCodeableConcept: CodeableConcept\n    valueCoding: Coding\n    valueContactPoint: ContactPoint\n    valueCount: Count\n    valueDistance: Distance\n    valueDuration: Duration\n    valueHumanName: HumanName\n    valueIdentifier: Identifier\n    valueMoney: Money\n    valuePeriod: Period\n    valueQuantity: Quantity\n    valueRange: Range\n    valueRatio: Ratio\n    valueReference: Reference - a reference to another resource\n    valueSampledData: SampledData\n    valueSignature: Signature\n    valueTiming: Timing\n    valueContactDetail: ContactDetail\n    valueContributor: Contributor\n    valueDataRequirement: DataRequirement\n    valueExpression: Expression\n    valueParameterDefinition: ParameterDefinition\n    valueRelatedArtifact: RelatedArtifact\n    valueTriggerDefinition: TriggerDefinition\n    valueUsageContext: UsageContext\n    valueDosage: Dosage*/\n}\n","import {Element} from './element';\n\nexport class Narrative extends Element {\n    status: 'generated' | 'extensions' | 'additional' | 'empty';\n    div: string; // Limited xhtml content\n}\n","import {Element} from './element';\n\nexport class Period extends Element {\n\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n\n  start?: Date;\n  end?: Date;\n  // tslint:disable-next-line:max-line-length\n  /*Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?*/\n}\n","import {SimpleQuantity} from './terminology/simple-quantity';\nimport {Element} from './element';\n\nexport class Range extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    low?: SimpleQuantity; // SimpleQuantity Low limit\n    high?: SimpleQuantity; // SimpleQuantity High limit\n}\n","import {Identifier} from './terminology/identifier';\nimport {Element} from './element';\n\nexport class Reference extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    reference?: string; // Regex: [ \\r\\n\\t\\S]+\n    type?: string; // uri\n    identifier?: Identifier;\n    display?: string;\n}\n","import {Element} from './element';\nimport {Quantity} from './index';\n\nexport class Ratio extends Element {\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n  numerator?: Quantity;\n  denominator?: Quantity;\n}\n","import { Element } from '../element';\nimport { Period } from '../period';\n\nexport class HumanName extends Element {\n\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    use?: 'usual' | 'official' | 'temp' | 'nickname' | 'anonymous' | 'old' | 'maiden';\n    text?: string;\n    family?: string;\n    given?: string[] = [];\n    prefix?: string[] = [];\n    suffix?: string[] = [];\n    period?: Period;\n\n    public static getNew() {\n        return new HumanName({use: 'official', given: ['name']});\n    }\n}\n","import {Identifier} from '../terminology/identifier';\nimport {DomainResource} from '../domain-resource';\nimport {HumanName} from './humanname';\nimport {ContactPoint} from '../terminology/contactpoint';\nimport {Address} from './address';\nimport {Attachment} from './attachment';\nimport {Reference} from '../reference';\n\nexport class Person extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    resourceType: string = 'Person';\n    identifier?: Identifier[];\n    name?: HumanName[];\n    telecom?: ContactPoint[];\n    gender?: 'male' | 'female' | 'other' | 'unknown';\n    birthDate?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n    address?: Address[];\n    photo?: Attachment;\n    managingOrganization?: Reference; // (Organization)\n    active?: boolean;\n    link?: { // BackboneElement\n        target: Reference; // (Patient | Practitioner | RelatedPerson | Person)\n        assurance?: 'level1' | 'level2' | 'level3' | 'level4';\n    }[];\n\n    public static getNew() {\n        return new Person({name: [HumanName.getNew()]});\n    }\n}\n","import { Period } from '../period';\nimport { Element } from '../element';\n\nexport class Address extends Element {\n\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n\n  use?: 'home' | 'work' | 'temp' | 'old' | 'billing';\n  type?: 'postal' | 'physical' | 'both';\n  text?: string;\n  line?: string[];\n  city?: string;\n  district?: string;\n  state?: string;\n  postalCode?: string;\n  country?: string;\n  period?: Period;\n}\n","import {Element} from '../element';\nexport class Attachment extends Element {\n  resourceType: string = 'Attachment';\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n  contentType?: string;\n  language?: string;\n  data?: string; // base64Binary Regex: (\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+\n  url?: string; // url\n  size?: number; // unsignedInt Regex: [0]|([1-9][0-9]*)\n  hash?: string; // base64Binary Regex: (\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+\n  title?: string;\n  creation?: Date;\n\n  // constructor(contentType, language, data, url, size, hash, title, creation) {\n  //   super();\n  //   this.contentType = contentType;\n  //   this.language = language;\n  //   this.data = data;\n  //   this.url = url;\n  //   this.size = size;\n  //   this.hash = hash;\n  //   this.title = title;\n  //   this.creation = creation;\n  // }\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from '../terminology/identifier';\nimport {CodeableConcept} from '../terminology/codeableconcept';\nimport {Reference} from '../reference';\nimport {Quantity} from '../terminology/quantity';\nimport {Range} from '../range';\nimport {Period} from '../period';\n\nexport class Group extends DomainResource {\n    resourceType: string = 'Group';\n    identifier?: Identifier[];\n    active?: boolean;\n    type: 'person' | 'animal' | 'practitioner' | 'device' | 'medication' | 'substance';\n    actual: boolean;\n    code?: CodeableConcept;\n    name?: string;\n    quantity?: number; // unsignedInt  \tRegex: [0]|([1-9][0-9]*)\n    managingEntity?: Reference; // (Organization | RelatedPerson | Practitioner | PractitionerRole)\n    characteristic?: { // BackboneElement\n        code: CodeableConcept;\n        valueCodeableConcept?: CodeableConcept;\n        valueBoolean?: boolean;\n        valueQuantity?: Quantity;\n        valueRange?: Range;\n        valueReference?: Reference;\n        exclude: boolean;\n        period?: Period;\n    }[];\n    member?: { // BackboneElement\n        entity: Reference; // (Patient | Practitioner | PractitionerRole | Device | Medication | Substance | Group)\n        period?: Period;\n        inactive?: boolean;\n    }[];\n}\n","import { DomainResource } from '../domain-resource';\nimport { Identifier } from '..';\nimport { HumanName } from './humanname';\nimport { ContactPoint } from '..';\nimport { Address } from './address';\nimport { CodeableConcept } from '..';\nimport { Attachment } from './attachment';\nimport { Reference } from '../reference';\nimport { Period } from '../period';\n\nexport class Patient extends DomainResource {\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n  resourceType: string = 'Patient';\n  identifier?: Identifier[];\n  active?: boolean;\n  name?: HumanName[];\n  telecom?: ContactPoint[];\n  gender?: 'male' | 'female' | 'other' | 'unknown';\n  birthDate?: Date;\n  deceasedBoolean?: boolean;\n  deceasedDateTime?: Date;\n  address?: Address[];\n  maritalStatus?: CodeableConcept;\n  multipleBirthBoolean?: boolean;\n  multipleBirthInteger?: number; // Regex: [0]|[-+]?[1-9][0-9]*\n  photo?: Attachment[];\n  contact?: { // BackboneElement\n    relationship?: CodeableConcept[];\n    name?: HumanName;\n    telecom?: ContactPoint[];\n    address?: Address;\n    gender?: 'male' | 'female' | 'other' | 'unknown';\n    organization?: Reference; // (Organization)\n    period?: Period;\n  }[];\n  communication?: { // BackboneElement\n    language: CodeableConcept;\n    preferred?: boolean;\n  }[];\n  generalPractitioner?: Reference[]; // (Organization | Practitioner | PractitionerRole)\n  managingOrganization?: Reference; // (Organization)\n  link?: { // BackboneElement\n    other: Reference; // (Patient | RelatedPerson)\n    type: 'replaced-by' | 'replaces' | 'refer' | 'seealso';\n  }[];\n\n  public static getNew() {\n    return new Patient({name: [HumanName.getNew()]});\n  }\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from '../terminology/identifier';\nimport {HumanName} from './humanname';\nimport {ContactPoint} from '../terminology/contactpoint';\nimport {Address} from './address';\nimport {Attachment} from './attachment';\nimport {CodeableConcept} from '../terminology/codeableconcept';\nimport {Period} from '../period';\nimport {Reference} from '../reference';\n\nexport class Practitioner extends DomainResource {\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n  resourceType: string = 'Practitioner';\n  identifier?: Identifier[];\n  active?: boolean;\n  name?: HumanName[];\n  telecom?: ContactPoint[];\n  address?: Address[];\n  gender?: \t'male' | 'female' | 'other' | 'unknown';\n  birthDate?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n  photo?: Attachment[];\n  qualification?: { // BackboneElement\n    identifier?: Identifier[];\n    code: CodeableConcept;\n    period?: Period;\n    issuer?: Reference; // (Organization)\n  }[];\n  communication?: CodeableConcept[];\n\n  public static getNew() {\n    return new Practitioner({name: [HumanName.getNew()]});\n  }\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from '../terminology/identifier';\nimport {Period} from '../period';\nimport {Reference} from '../reference';\nimport {CodeableConcept} from '../terminology/codeableconcept';\nimport {ContactPoint} from '../terminology/contactpoint';\nimport {HumanName} from './humanname';\n\nexport class PractitionerRole extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    resourceType: string = 'PractitionerRole';\n    identifier?: Identifier[];\n    active?: boolean;\n    period?: Period;\n    practitioner?: Reference; // (Practitioner)\n    organization?: Reference; // (Organization)\n    code?: CodeableConcept[];\n    specialty?: CodeableConcept[];\n    location?: Reference[]; // (Location)\n    healthcareService?: Reference[]; // (HealthcareService)\n    telecom?: ContactPoint[];\n    availableTime?: {\n        daysOfWeek?: string[];\n        allDay?: boolean;\n        availableStartTime?: Date; // Regex: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?\n        availableEndTime?: Date;\n    }[];\n    notAvailable?: { // BackboneElement\n        description: string;\n        during?: Period;\n    }[];\n    availabilityExceptions?: string;\n    endpoint?: Reference[]; // (Endpoint)\n\n    public static getNew() {\n        return new PractitionerRole({name: [HumanName.getNew()]});\n    }\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from '../terminology/identifier';\nimport {Reference} from '../reference';\nimport {CodeableConcept} from '../terminology/codeableconcept';\nimport {HumanName} from './humanname';\nimport {ContactPoint} from '../terminology/contactpoint';\nimport {Address} from './address';\nimport {Attachment} from './attachment';\nimport {Period} from '../period';\n\nexport class RelatedPerson extends DomainResource {\n    resourceType: string = 'RelatedPerson';\n    identifier?: Identifier[];\n    active?: boolean;\n    patient: Reference; // (Patient)\n    relationship?: CodeableConcept[];\n    name?: HumanName[];\n    telecom?: ContactPoint[];\n    gender?: 'male' | 'female' | 'other' | 'unknown';\n    birthDate?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n    address?: Address[];\n    photo?: Attachment[];\n    period?: Period;\n    communication?: { // BackboneElement\n        language: CodeableConcept;\n        preferred: boolean;\n    }[];\n}\n","import {Element} from '../element';\nimport {Extension} from '../extension';\n\nexport class BackboneElement extends Element {\n    modifierExtension?: Extension[];\n}\n","import {Coding} from './coding';\nimport {Element} from '../element';\n\nexport class CodeableConcept extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    coding?: Coding[];\n    text?: string; // Regex: [ \\r\\n\\t\\S]+\n}\n","import {Identifier} from './identifier';\nimport {ContactDetail} from './contactdetail';\nimport {UsageContext} from './usagecontext';\nimport {CodeableConcept} from './codeableconcept';\nimport {DomainResource} from '../domain-resource';\nimport {Coding} from './coding';\nimport {CodeSystemConcept} from './codesystemconcept';\n\nexport class CodeSystem extends DomainResource {\n    resourceType: string = 'CodeSystem';\n    url?: string; // uri\n    identifier?: Identifier[];\n    version?: string;\n    name?: string;\n    title?: string;\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    experimental?: boolean;\n    date?: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    description?: string; // Regex: \\s*(\\S|\\s)*\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    purpose?: string; // Regex: \\s*(\\S|\\s)*\n    copyright?: string; // Regex: \\s*(\\S|\\s)*\n    caseSensitive?: boolean;\n    valueSet?: string; // canonical(ValueSet)\n    hierarchyMeaning?: 'grouped-by' | 'is-a' | 'part-of' | 'classified-with';\n    compositional?: boolean;\n    versionNeeded?: boolean;\n    content: 'not-present' | 'example' | 'fragment' | 'complete' | 'supplement';\n    supplements?: string; // canonical(CodeSystem)\n    count?: number; // unsignedInt Regex: [0]|([1-9][0-9]*)\n    filter?: { // BackboneElement\n        code: string; // code\n        description?: string;\n        operator: string[]; // code\n        value: string;\n    }[];\n    property?: { // BackboneElement\n        code: string; // code\n        uri?: string; // uri\n        description?: string;\n        type: 'Coding' | 'string' | 'boolean' | 'Date' | 'number'; // code,(\tcode | Coding | string | integer | boolean | dateTime | decimal)\n    }[];\n    /*concept?: { // BackboneElement\n        code: string;\n        display?: string;\n        definition?: string;\n        designation?: { // BackboneElement\n            language?: string;\n            use?: Coding;\n            value: string;\n        }[];\n        property?: { // BackboneElement\n            code: string;\n            valueCode: string;\n            valueCoding: Coding;\n            valueString: string;\n            valueInteger: number; // integer\n            valueBoolean: boolean;\n            valueDateTime: Date;\n            valueDecimal: number; // decimal\n        }[];*/\n       concept?: CodeSystemConcept[];\n}\n","import {Coding} from './coding';\nimport {BackboneElement} from './backboneelement';\n\nexport class CodeSystemConcept extends BackboneElement {\n    code: string; // code\n    display?: string;\n    definition?: string;\n    designation?: { // BackboneElement\n        language?: string; // code\n        use?: Coding;\n        value: string;\n    }[];\n    property?: { // BackboneElement\n        code: string; // code\n        valueCode?: string;\n        valueCoding?: Coding;\n        valueString?: string;\n        valueInteger?: number;\n        valueBoolean?: boolean;\n        valueDateTime?: Date;\n        valueDecimal?: number;\n    }[];\n    concept?: CodeSystemConcept; // \tsee concept\tChild Concepts (is-a/contains/categorizes)\n}\n","import {Element} from '../element';\n\nexport class Coding extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    system?: string; // uri Regex: \\S*\n    version?: string; // Regex: [ \\r\\n\\t\\S]+\n    code?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n    display?: string; // Regex: [ \\r\\n\\t\\S]+\n    userSelected?: boolean; // Regex: true|false\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from './identifier';\nimport {ContactDetail} from './contactdetail';\nimport {UsageContext} from './usagecontext';\nimport {CodeableConcept} from './codeableconcept';\nimport {ConceptMapDependsOn} from './conceptmapdependson';\n\nexport class ConceptMap extends DomainResource {\n    resourceType: string = 'ConceptMap';\n    url?: string; // uri\n    identifier?: Identifier;\n    version?: string;\n    name?: string;\n    title?: string;\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    experimental?: boolean;\n    date?: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    description?: string;\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    purpose?: string; // Regex: \\s*(\\S|\\s)*\n    copyright?: string; // Regex: \\s*(\\S|\\s)*\n    sourceUri?: string; // uri\n    sourceCanonical?: string; // canonical(ValueSet)\n    targetUri?: string; // uri\n    targetCanonical?: string; // canonical(ValueSet)\n    group?: {\n        source?: string; // uri\n        sourceVersion?: string;\n        target?: string; // uri\n        targetVersion?: string;\n        element: {\n            code?: string;\n            display?: string;\n            target?: {\n                code?: string;\n                display?: string;\n                equivalence: string; // code\n                comment?: string;\n                dependsOn?: ConceptMapDependsOn[];\n                product?: ConceptMapDependsOn[]; // see dependsOn\n            }[];\n            unmapped?: {\n                mode: string; // code\n                code?: string; // code\n                display?: string;\n                url?: string; // canonical(ConceptMap)\n            }[]\n        }[];\n    }[];\n}\n","import {BackboneElement} from './backboneelement';\n\nexport class ConceptMapDependsOn extends BackboneElement {\n    property: string; // uri\n    system?: string; // canonical(CodeSystem)\n    value: string;\n    display?: string;\n}\n","import {ContactPoint} from './contactpoint';\nimport {Element} from '../element';\n\nexport class ContactDetail extends Element {\n\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    name?: string;\n    telecom?: ContactPoint[];\n}\n","import {Element} from '../element';\nimport {Period} from '../period';\n\nexport class ContactPoint extends Element {\n\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    system?: 'phone' | 'fax' | 'email' | 'pager' | 'url' | 'sms' | 'other'; // Regex: [^\\s]+(\\s[^\\s]+)*\n    value?: string;\n    use?: 'home' | 'work' | 'temp' | 'old' | 'mobile';\n    rank?: number; // positiveInt Regex: +?[1-9][0-9]*\n    period?: Period;\n}\n","import {CodeableConcept} from './codeableconcept';\nimport {Period} from '../period';\nimport {Reference} from '../reference';\nimport {Element} from '../element';\n\nexport class Identifier extends Element {\n\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    use?: string; // Regex: [^\\s]+(\\s[^\\s]+)* // usual | official | temp | secondary | old (If known)\n    type?: CodeableConcept;\n    system?: string; // uri Regex: \\S*\n    value?: string;\n    period?: Period;\n    assigner?: Reference;\n}\n","import {DomainResource} from '../domain-resource';\nimport {ContactDetail} from './contactdetail';\nimport {CodeableConcept} from './codeableconcept';\nimport {UsageContext} from './usagecontext';\nimport {Period} from '../period';\n\nexport class NamingSystem extends DomainResource {\n    resourceType: string = 'NamingSystem';\n    name: string;\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    kind: string; // code\n    date: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    responsible?: string;\n    type?: CodeableConcept;\n    description?: string;\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    usage?: string;\n    uniqueId: { // BackboneElement\n        type: 'oid' | 'uuid' | 'uri' | 'other';\n        value: string;\n        preferred?: boolean;\n        comment?: string;\n        period?: Period;\n    }[];\n}\n","import {Element} from '../element';\n\nexport class Quantity extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    value?: number; // decimal \tRegex: -?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    comparator?: '<' | '<=' | '>=' | '>';\n    unit?: string;\n    system?: string; // uri\n    code?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n}\n","import { Quantity } from './quantity';\n\nexport class SimpleQuantity extends Quantity {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    value?: number; // decimal \tRegex: (0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    unit?: string;\n    system?: string; // uri\n    code?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n}\n","import {DomainResource} from '../domain-resource';\nimport {ContactDetail} from './contactdetail';\nimport {UsageContext} from './usagecontext';\nimport {CodeableConcept} from './codeableconcept';\n\nexport class TerminologyCapabilities extends DomainResource {\n    resourceType: string = 'TerminologyCapabilities';\n    url?: string; // uri\n    version?: string;\n    name?: string;\n    title?: string;\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    experimental?: boolean;\n    date: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    description?: string;\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    purpose?: string; // Regex: \\s*(\\S|\\s)*\n    copyright?: string; // Regex: \\s*(\\S|\\s)*\n    kind: 'instance' | 'capability' | 'requirements';\n    software?: {\n        name: string;\n        version?: string;\n    };\n    implementation?: { // BackboneElement\n        description: string;\n        url?: string; // url\n    };\n    lockedDate?: boolean;\n    codeSystem?: { // BackboneElement\n        uri?: string; // \tcanonical(CodeSystem)\n        version?: { // BackboneElement\n            code?: string;\n            isDefault?: boolean;\n            compositional?: boolean;\n            language?: string[];\n            filter?: {\n                code: string; // code\n                op: string[];\n            }[];\n            property?: string[]; // code\n        }[];\n        subsumption?: boolean;\n    }[];\n    expansion?: {\n        hierarchical?: boolean;\n        paging?: boolean;\n        incomplete?: boolean;\n        parameter?: {\n            name: string;\n            documentation?: string;\n        }[];\n        textFilter?: string;\n    };\n    codeSearch?: 'explicit' | 'all'; // code\n    validateCode?: { // BackboneElement\n        translations: boolean;\n    };\n    translation?: { // BackboneElement\n        needsMap: boolean;\n    };\n    closure?: { // BackboneElement\n        translation?: boolean;\n    };\n}\n","import {Coding} from './coding';\nimport {Element} from '../element';\nimport {CodeableConcept} from './codeableconcept';\nimport {Reference} from '../reference';\nimport {Quantity} from './quantity';\nimport {Range} from '../range';\n\nexport class UsageContext extends Element {\n    code: Coding;\n    valueCodeableConcept?: CodeableConcept;\n    valueQuantity?: Quantity;\n    valueRange?: Range;\n    valueReference?: Reference;\n    // ('PlanDefinition' | 'ResearchStudy' | 'InsurancePlan' | 'HealthcareService' | 'Group' | 'Location' | 'Organization')\n}\n","import {DomainResource} from '../domain-resource';\nimport {Identifier} from './identifier';\nimport {ContactDetail} from './contactdetail';\nimport {UsageContext} from './usagecontext';\nimport {CodeableConcept} from './codeableconcept';\nimport {Coding} from './coding';\nimport {ValueSetContains} from '../valuesetcontains';\n\nexport class ValueSet extends DomainResource {\n    resourceType: string = 'ValueSet';\n    url?: string; // uri\n    identifier?: Identifier[];\n    version?: string;\n    name?: string;\n    title?: string;\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    experimental?: boolean;\n    date?: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    description?: string;\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    immutable?: boolean;\n    purpose?: string; // Regex: \\s*(\\S|\\s)*\n    copyright?: string; // Regex: \\s*(\\S|\\s)*\n    compose?: { // BackboneElement\n        lockedDate?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n        inactive?: boolean;\n        include: { // BackboneElement\n            system?: string; // uri\n            version?: string;\n            concept?: {\n                code: string; // code\n                display?: string;\n                designation?: { // BackboneElement\n                    language?: string; // code\n                    use?: Coding;\n                    value: string;\n                }[]\n            }[];\n            filter?: { // BackboneElement\n                property: string; // code\n                op: string; // = | is-a | descendent-of | is-not-a | regex | in | not-in | generalizes | exists\n                value: string;\n            }[];\n            valueSet?: string[]; // canonical(ValueSet)\n        }[];\n        exclude?: { // BackboneElement\n            system?: string; // uri\n            version?: string;\n            concept?: {\n                code: string; // code\n                display?: string;\n                designation?: { // BackboneElement\n                    language?: string; // code\n                    use?: Coding;\n                    value: string;\n                }[]\n            }[];\n            filter?: { // BackboneElement\n                property: string; // code\n                op: string; // = | is-a | descendent-of | is-not-a | regex | in | not-in | generalizes | exists\n                value: string;\n            }[];\n            valueSet?: string[]; // canonical(ValueSet)\n        }[]; // see include\tExplicitly exclude codes from a code system or other value sets\n    };\n    expansion?: { // BackboneElement\n        identifier?: string; // uri\n        timestamp: Date;\n        total?: number; // Regex: [0]|[-+]?[1-9][0-9]*\n        offset?: number; // Regex: [0]|[-+]?[1-9][0-9]*\n        parameter?: {\n            name: string;\n            valueString?: string;\n            valueBoolean?: boolean;\n            valueInteger?: number;\n            valueDecimal?: number;\n            valueUri?: string;\n            valueCode?: string;\n            valueDateTime?: Date;\n        }[]; // BackboneElement\n        contains?: ValueSetContains[];\n    };\n}\n","export class ResourceCapability {\n    resourceType: string = 'ResourceCapability';\n    type: string;\n    profile?: string;\n    interaction: {\n        code: 'read' | 'vread' | 'update' | 'patch' | 'delete' | 'history-instance' | 'history-type' | 'create' | 'search-type'\n        documentation?: string;\n    }[];\n    versioning?: string;\n    conditionalRead?: 'not-supported' | 'modified-since' | 'not-match' | 'full-support';\n    conditionalCreate?: boolean;\n    conditionalUpdate?: boolean;\n    conditionalDelete?: 'not-supported' | 'single' | 'multiple';\n    searchInclude?: string[];\n    searchParam?: {\n        name: string;\n        definition?: string;\n        type: 'number' | 'date' | 'string' | 'token' | 'reference' | 'composite' | 'quantity' | 'uri' | 'special';\n        documentation?: string;\n    }[];\n    operation?: {\n        name: string;\n        definition?: string;\n        documentation?: string;\n    }[];\n}\n\nexport class CapabilityStatement {\n    resourceType: 'CapabilityStatement';\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    date: Date;\n    publisher?: string;\n    kind: 'instance' | 'capability' | 'requirements';\n    software?: {\n        name: string;\n        version: string;\n    };\n    implementation?: {\n        description: string,\n        url: string;\n    };\n    fhirVersion: string;\n    format: string[];\n    rest?: {\n        mode: 'client' | 'server';\n        resource: ResourceCapability[];\n    }[];\n}\n","import { Resource } from '../resource';\nimport { Identifier } from '../terminology/identifier';\nimport {BundleEntry} from './bundle-entry';\n\nexport class Bundle extends Resource {\n    identifier?: Identifier;\n    resourceType: string = 'Bundle';\n    type: 'document' | 'message' | 'transaction' | 'transaction-response' | 'batch' | 'batch-response' | 'history' | 'searchset' | 'collection';\n    timestamp?: Date;\n    total: number;\n    link?: {relation: string, url: string}[];\n    entry?: BundleEntry[];\n}\n","import {Resource} from '../resource';\n\nexport class BundleEntry {\n    link?: string;\n    fullUrl?: string;\n    resource?: Resource;\n    request?: {\n        method?: 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n        url: string;\n        ifNoneMatch?: string;\n        ifModifiedSince?: Date;\n        ifMatch?: string;\n        ifNoneExist?: string;\n    };\n    response?: {\n        status: string;\n        location?: string;\n        etag?: string;\n        lastModified?: Date;\n        outcome?: Resource;\n    };\n    search?: {\n        mode?: 'match' | 'include' | 'outcome';\n        score?: number;\n    };\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Coding, Identifier, Period, Reference} from '..';\nimport {Duration} from '../medications/duration';\n\nexport class Encounter extends DomainResource {\n  resourceType: string = 'Encounter';\n  identifier?: Identifier[];\n  status: 'planned' | 'arrived' | 'triaged' | 'in-progress' | 'onleave' | 'finished' | 'cancelled';\n  statusHistory?: { // BackboneElement\n    status: 'planned' | 'arrived' | 'triaged' | 'in-progress' | 'onleave' | 'finished' | 'cancelled';\n    period: Period\n  }[];\n  class: Coding;\n  classHistory?: { // BackboneElement\n    class: Coding;\n    period: Period\n  }[];\n  type?: CodeableConcept[];\n  serviceType?: CodeableConcept;\n  priority?: CodeableConcept;\n  subject?: Reference; // (Patient | Group)\n  episodeOfCare?: Reference[]; // (EpisodeOfCare)\n  basedOn?: Reference[]; // (ServiceRequest)\n  participant?: { // BackboneElement\n    type?: CodeableConcept[];\n    period?: Period;\n    individual?: Reference; // (Practitioner | PractitionerRole | RelatedPerson)\n  }[];\n  appointment?: Reference[]; // (Appointment)\n  period?: Period;\n  length?: Duration;\n  reasonCode?: CodeableConcept[];\n  reasonReference?: Reference[]; // (Condition | Procedure | Observation | ImmunizationRecommendation)\n  diagnosis?: { // BackboneElement\n    condition: Reference; // (Condition | Procedure)\n    use?: CodeableConcept;\n    rank?: number; // positiveInt Regex: +?[1-9][0-9]*\n  }[];\n  account?: Reference[];\n  hospitalization?: { // BackboneElement\n    preAdmissionIdentifier?: Identifier;\n    origin?: Reference; // (Location | Organization)\n    admitSource?: CodeableConcept;\n    reAdmission?: CodeableConcept;\n    dietPreference?: CodeableConcept[];\n    specialCourtesy?: CodeableConcept[];\n    specialArrangement?: CodeableConcept[];\n    destination?: Reference; // (Location | Organization)\n    dischargeDisposition?: CodeableConcept;\n  };\n  location?: { // BackboneElement\n    location: Reference; // (Location)\n    status?: 'planned' | 'active' | 'reserved' | 'completed';\n    physicalType?: CodeableConcept;\n    period?: Period;\n  }[];\n  serviceProvider?: Reference; // (Organization)\n  partOf?: Reference; // (Encounter)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\n\nexport class EpisodeOfCare extends DomainResource {\n    resourceType: string = 'EpisodeOfCare';\n    identifier?: Identifier[];\n    status: 'planned' | 'waitlist' | 'active' | 'onhold' | 'finished' | 'cancelled' | 'entered-in-error';\n    statusHistory?: { // BackboneElement\n        status: 'planned' | 'waitlist' | 'active' | 'onhold' | 'finished' | 'cancelled' | 'entered-in-error';\n        period: Period;\n    }[];\n    type?: CodeableConcept[];\n    diagnosis?: { // BackboneElement\n        condition: Reference; // (Condition)\n        role?: CodeableConcept;\n        rank?: number; // positiveInt Regex: +?[1-9][0-9]*\n    }[];\n    patient: Reference; // (Patient)\n    managingOrganization?: Reference; // (Organization)\n    period?: Period;\n    referralRequest?: Reference[]; // (ServiceRequest)\n    careManager?: Reference; // (Practitioner | PractitionerRole)\n    team?: Reference[]; // (CareTeam)\n    account?: Reference[]; // (Account)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\n\nexport class Flag extends DomainResource {\n    resourceType: string = 'Flag';\n    identifier?: Identifier[];\n    status: 'active' | 'inactive' | 'entered-in-error';\n    category?: CodeableConcept[];\n    code: CodeableConcept;\n    subject: Reference; // (Patient | Location | Group | Organization | Practitioner | PlanDefinition | Medication | Procedure)\n    period?: Period;\n    encounter?: Reference; // (Encounter)\n    author?: Reference; // (Device | Organization | Patient | Practitioner | PractitionerRole)\n}\n","import {DomainResource} from '../domain-resource';\nimport {Attachment, CodeableConcept, ContactDetail, Identifier, Period, Reference, UsageContext} from '..';\nimport {RelatedArtifact} from '../relatedartifact';\nimport {ParameterDefinition} from '../parameterdefinition';\nimport {DataRequirement} from '../datarequirement';\n\nexport class Library  extends DomainResource {\n  resourceType: string = 'Library';\n  url?: string; // uri\n  identifier?: Identifier[];\n  version?: string;\n  name?: string;\n  title?: string;\n  subtitle?: string;\n  status: 'draft' | 'active' | 'retired' | 'unknown';\n  experimental?: boolean;\n  type: CodeableConcept;\n  subjectCodeableConcept?: CodeableConcept;\n  subjectReference?: Reference;\n  date?: Date;\n  publisher?: string;\n  contact?: ContactDetail[];\n  description?: string;\n  useContext?: UsageContext[];\n  jurisdiction?: CodeableConcept[];\n  purpose?: string;\n  usage?: string;\n  copyright?: string;\n  approvalDate?: Date;\n  lastReviewDate?: Date;\n  effectivePeriod?: Period;\n  topic?: CodeableConcept[];\n  author?: ContactDetail[];\n  editor?: ContactDetail[];\n  reviewer?: ContactDetail[];\n  endorser?: ContactDetail[];\n  relatedArtifact?: RelatedArtifact[];\n  parameter?: ParameterDefinition[];\n  dataRequirement?: DataRequirement[];\n  content?: Attachment[];\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Reference} from '..';\nimport {Annotation} from '../workflow/annotation';\n\nexport class List extends DomainResource {\n    resourceType: string = 'List';\n    identifier?: Identifier[];\n    status: 'current' | 'retired' | 'entered-in-error';\n    mode: 'working' | 'snapshot' | 'changes';\n    title?: string;\n    code?: CodeableConcept;\n    subject?: Reference; // (Patient | Group | Device | Location)\n    encounter?: Reference; // (Encounter)\n    date?: Date;\n    source?: Reference; // (Practitioner | PractitionerRole | Patient | Device)\n    orderedBy?: CodeableConcept;\n    note?: Annotation[];\n    entry?: { // BackboneElement\n        flag?: CodeableConcept;\n        deleted?: boolean;\n        date?: Date;\n        item: Reference; // (Any)\n    }[];\n    emptyReason?: CodeableConcept;\n}\n","import {Timing} from '../timing';\nimport {Ratio} from '../ratio';\nimport { BackboneElement } from '../terminology/backboneelement';\nimport { CodeableConcept } from '../terminology/codeableconcept';\nimport { SimpleQuantity } from '../terminology/simple-quantity';\n\nexport class Dosage extends BackboneElement {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    sequence?: number;\n    text?: string;\n    additionalInstruction?: CodeableConcept[];\n    patientInstruction?: string;\n    timing?: Timing;\n    asNeededBoolean?: boolean;\n    asNeededCodeableConcept?: CodeableConcept;\n    site?: CodeableConcept;\n    route?: CodeableConcept;\n    method?: CodeableConcept;\n    doseAndRate?: {\n        type?: CodeableConcept;\n        doseRange?: Range;\n        doseQuantity?: SimpleQuantity;\n        rateRatio?: Ratio;\n        rateRange?: Range;\n        rateQuantity?: SimpleQuantity;\n    }[];\n    maxDosePerPeriod?: Ratio;\n    maxDosePerAdministration?: SimpleQuantity;\n    maxDosePerLifetime?: SimpleQuantity;\n}\n","import { Quantity } from '../terminology/quantity';\n\nexport class Duration extends Quantity {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    value?: number; // decimal \tRegex: -?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    comparator?: '<' | '<=' | '>=' | '>';\n    unit?: string;\n    system?: string; // uri\n    code?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\nimport {Annotation} from '../workflow/annotation';\nimport {SimpleQuantity} from '../terminology/simple-quantity';\nimport {Ratio} from '../ratio';\n\nexport class MedicationAdministration extends DomainResource {\n    resourceType: string = 'MedicationAdministration';\n    identifier?: Identifier[];\n    instantiates?: string[]; // uri\n    partOf?: Reference[]; // (MedicationAdministration | Procedure)\n    status: 'in-progress' | 'not-done' | 'on-hold' | 'completed' | 'entered-in-error' | 'stopped' | 'unknown';\n    statusReason?: CodeableConcept[];\n    category?: CodeableConcept;\n    medicationCodeableConcept: CodeableConcept;\n    medicationReference: Reference; // (Medication)\n    subject: Reference; // (Patient | Group)\n    context?: Reference; // (Encounter | EpisodeOfCare)\n    supportingInformation?: Reference[]; // (Any)\n    effectiveDateTime: Date;\n    effectivePeriod: Period;\n    performer?: { // BackboneElement\n        function?: CodeableConcept;\n        actor: Reference; // (Practitioner | PractitionerRole | Patient | RelatedPerson | Device)\n    }[];\n    reasonCode?: CodeableConcept[];\n    reasonReference?: Reference[]; // (Condition | Observation | DiagnosticReport)\n    request?: Reference; // (MedicationRequest)\n    device?: Reference[]; // (Device)\n    note?: Annotation[];\n    dosage?: {\n        text?: string;\n        site?: CodeableConcept;\n        route?: CodeableConcept;\n        method?: CodeableConcept;\n        dose?: SimpleQuantity;\n        rateRatio?: Ratio;\n        rateQuantity?: SimpleQuantity;\n    };\n    eventHistory?: Reference[]; // (Provenance)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Reference} from '..';\nimport {SimpleQuantity} from '../terminology/simple-quantity';\nimport {Annotation} from '../workflow/annotation';\nimport {Dosage} from './dosage';\n\nexport class MedicationDispense extends DomainResource {\n    resourceType: string = 'MedicationDispense';\n    identifier?: Identifier[];\n    partOf?: Reference; // (Procedure)\n    status: 'preparation' | 'in-progress' | 'cancelled' | 'on-hold' | 'completed' | 'entered-in-error' | 'stopped' | 'unknown';\n    statusReasonCodeableConcept?: CodeableConcept;\n    statusReasonReference?: Reference; // (DetectedIssue)\n    category?: CodeableConcept;\n    medicationCodeableConcept: CodeableConcept;\n    medicationReference: Reference; // (Medication)\n    subject?: Reference; // (Patient | Group)\n    context?: Reference; // (Encounter | EpisodeOfCare)\n    supportingInformation?: Reference[]; // (Any)\n    performer?: {\n        function?: CodeableConcept;\n        actor: Reference; // (Practitioner | PractitionerRole | Organization | Patient | Device | RelatedPerson)\n    }[];\n    location?: Reference; // (Location)\n    authorizingPrescription?: Reference[]; // (MedicationRequest)\n    type?: CodeableConcept;\n    quantity?: SimpleQuantity;\n    daysSupply?: SimpleQuantity;\n    whenPrepared?: Date;\n    whenHandedOver?: Date;\n    destination?: Reference; // (Location)\n    receiver?: Reference[]; // (Patient | Practitioner)\n    note?: Annotation[];\n    dosageInstruction?: Dosage[];\n    substitution?: {\n        wasSubstituted: boolean;\n        type?: CodeableConcept;\n        reason?: CodeableConcept[];\n        responsibleParty?: Reference[]; // (Practitioner | PractitionerRole)\n    };\n    detectedIssue?: Reference[]; // (DetectedIssue)\n    eventHistory?: Reference[]; // (Provenance)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Reference} from '..';\nimport {SimpleQuantity} from '../terminology/simple-quantity';\nimport {Ratio} from '../ratio';\nimport {Money} from '../money';\nimport {Dosage} from './dosage';\nimport {Duration} from './duration';\n\nexport class MedicationKnowledge extends DomainResource {\n    resourceType: string = 'MedicationKnowledge';\n    code?: CodeableConcept;\n    status?: 'active' | 'inactive' | 'entered-in-error';\n    manufacturer?: Reference; // (Organization)\n    doseForm?: CodeableConcept;\n    amount?: SimpleQuantity;\n    synonym?: string[];\n    relatedMedicationKnowledge?: { // BackboneElement\n        type: CodeableConcept;\n        reference?: Reference; // (MedicationKnowledge)\n    }[];\n    associatedMedication?: Reference; // (Medication)\n    productType?: CodeableConcept;\n    monograph?: { // BackboneElement\n        type?: CodeableConcept;\n        source?: Reference; // (DocumentReference | Media)\n    }[];\n    ingredient?: { // BackboneElement\n        itemCodeableConcept: CodeableConcept;\n        itemReference: Reference; // (Substance)\n        isActive?: boolean;\n        strength?: Ratio;\n    }[];\n    preparationInstruction?: string;\n    intendedRoute?: CodeableConcept[];\n    cost?: { // BackboneElement\n        type: CodeableConcept;\n        source?: string;\n        cost: Money;\n    }[];\n    monitoringProgram?: { // BackboneElement\n        type?: CodeableConcept;\n        name?: string;\n    }[];\n    administrationGuidelines?: { // BackboneElement\n        dosage?: { // BackboneElement\n            type: CodeableConcept;\n            dosage: Dosage[];\n            indicationCodeableConcept?: CodeableConcept;\n            indicationReference?: Reference; // (ObservationDefinition)\n            patientCharacteristics?: { // BackboneElement\n                characteristicCodeableConcept: CodeableConcept;\n                characteristicQuantity: SimpleQuantity;\n                value?: string;\n            }[];\n        }[];\n    }[];\n    medicineClassification?: { // BackboneElement\n        type: CodeableConcept;\n        classification?: CodeableConcept;\n    }[];\n    packaging?: { // BackboneElement\n        type?: CodeableConcept;\n        quantity?: SimpleQuantity;\n    }[];\n    drugCharacteristic?: { // BackboneElement\n        type?: CodeableConcept;\n        valueCodeableConcept?: CodeableConcept;\n        valueString?: string;\n        valueQuantity?: SimpleQuantity;\n        valueBase64Binary?: string; // Regex: (\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+\n    }[];\n    contraindication?: Reference[]; // (DetectedIssue)\n    regulatory?: { // BackboneElement\n        regulatoryAuthority: Reference; // (Organization)\n        substitution?: {\n            type: CodeableConcept;\n            allowed: boolean;\n        }[];\n        schedule?: { // BackboneElement\n            schedule: CodeableConcept;\n        }[];\n        maxDispense?: { // BackboneElement\n            quantity: SimpleQuantity;\n            period?: Duration;\n        }[];\n    }[];\n    kinetics?: { // BackboneElement\n        areaUnderCurve?: SimpleQuantity;\n        lethalDose50?: SimpleQuantity;\n        halfLifePeriod?: Duration;\n    }[];\n}\n","import { DomainResource } from '../domain-resource';\nimport { CodeableConcept, Identifier, Period, Reference } from '..';\nimport { Annotation } from '../workflow/annotation';\nimport { Dosage } from './dosage';\nimport { SimpleQuantity } from '..';\nimport { Duration } from './duration';\n\nexport class MedicationRequest extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    readonly resourceType: string = 'MedicationRequest';\n    identifier?: Identifier[];\n    status: 'active' | 'on-hold' | 'cancelled' | 'completed' | 'entered-in-error' | 'stopped' | 'draft' | 'unknown';\n    statusReason?: CodeableConcept;\n    intent: 'proposal' | 'plan' | 'order' | 'original-order' | 'instance-order' | 'option';\n    category?: CodeableConcept[];\n    priority?: 'routine' | 'urgent' | 'asap' | 'stat';\n    doNotPerform?: boolean;\n    reportedBoolean?: boolean;\n    reportedReference?: Reference; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Organization)\n    medicationCodeableConcept?: CodeableConcept;\n    medicationReference?: Reference; // (Medication)\n    subject: Reference; // (Patient | Group)\n    encounter?: Reference; // (Encounter)\n    supportingInformation?: Reference; // (Any)\n    authoredOn?: Date; //\n    requester?: Reference; // (Practitioner | PractitionerRole | Organization | Patient | RelatedPerson | Device)\n    performer?: Reference; // (Practitioner | PractitionerRole | Organization | Patient | Device | RelatedPerson | CareTeam)\n    performerType?: CodeableConcept;\n    recorder?: Reference; // (Practitioner | PractitionerRole)\n    reasonCode?: CodeableConcept[];\n    reasonReference?: Reference; // (Condition | Observation)\n    instantiatesCanonical?: string[]; // Instantiates FHIR protocol or definition\n    instantiatesUri?: string[]; // uri\n    basedOn?: Reference; // (CarePlan | MedicationRequest | ServiceRequest | ImmunizationRecommendation)\n    groupIdentifier?: Identifier;\n    courseOfTherapyType?: CodeableConcept;\n    insurance?: Reference; // (Coverage | ClaimResponse)\n    note?: Annotation[];\n    dosageInstruction?: Dosage[];\n    dispenseRequest?: { // BackboneElement\n        initialFill?: { // BackboneElement\n            quantity?: SimpleQuantity;\n            duration?: Duration; // First fill duration\n        };\n        dispenseInterval?: Duration; // Minimum period of time between dispenses\n        validityPeriod?: Period;\n        numberOfRepeatsAllowed?: number;\n        quantity?: SimpleQuantity;\n        expectedSupplyDuration?: Duration;\n        performer?: Reference;\n    };\n    substitution?: { // BackboneElement\n        allowedBoolean: boolean;\n        allowedCodeableConcept: CodeableConcept;\n        reason?: CodeableConcept;\n    };\n    priorPrescription?: Reference; // (MedicationRequest)\n    detectedIssue?: Reference[]; // (DetectedIssue)\n    eventHistory?: Reference[]; // (Provenance)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\nimport {Annotation} from '../workflow/annotation';\nimport {Dosage} from './dosage';\n\nexport class MedicationStatement extends DomainResource {\n    resourceType: string = 'MedicationStatement';\n    identifier?: Identifier[];\n    basedOn?: Reference[]; // (MedicationRequest | CarePlan | ServiceRequest)\n    partOf?: Reference[]; // (MedicationAdministration | MedicationDispense | MedicationStatement | Procedure | Observation)\n    status: 'active' | 'completed' | 'entered-in-error' | 'intended' | 'stopped' | 'on-hold' | 'unknown' | 'not-taken';\n    statusReason?: CodeableConcept[];\n    category?: CodeableConcept;\n    medicationCodeableConcept: CodeableConcept;\n    medicationReference: Reference; // (Medication)\n    subject: Reference; // (Patient | Group)\n    context?: Reference; // (Encounter | EpisodeOfCare)\n    effectiveDateTime: Date;\n    effectivePeriod?: Period;\n    dateAsserted?: Date;\n    informationSource?: Reference; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Organization)\n    derivedFrom?: Reference[]; // (Any)\n    reasonCode?: CodeableConcept[];\n    reasonReference?: Reference[]; // (Condition | Observation | DiagnosticReport)\n    note?: Annotation[];\n    dosage?: Dosage[];\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Reference} from '..';\nimport {Ratio} from '../ratio';\n\nexport class Medication extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    resourceType: string = 'Medication';\n    identifier?: Identifier[];\n    code?: CodeableConcept;\n    status?: 'active' | 'inactive' | 'entered-in-error';\n    manufacturer?: Reference; // (Organization)\n    form?: CodeableConcept;\n    amount?: Ratio;\n    ingredient?: {\n        itemCodeableConcept: CodeableConcept;\n        itemReference: Reference; // (Substance | Medication)\n        isActive?: boolean;\n        strength?: Ratio;\n    }[];\n    batch?: {   // BackboneElement\n        lotNumber?: string;\n        expirationDate?: Date;\n    };\n}\n","import {Element} from './element';\n\nexport class Money extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    value?: number; // decimal\n    currency?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Coding, ContactPoint, Identifier, Period, Reference} from '..';\n\nexport class Endpoint extends DomainResource {\n  resourceType: string = 'Endpoint';\n  identifier?: Identifier[];\n  status: 'active' | 'suspended' | 'error' | 'off' | 'entered-in-error' | 'test';\n  connectionType: Coding;\n  name?: string;\n  managingOrganization?: Reference; // (Organization)\n  contact?: ContactPoint[];\n  period?: Period;\n  payloadType: CodeableConcept[];\n  payloadMimeType?: string; // Regex: [^\\s]+(\\s[^\\s]+)*\n  address: string; // url\n  header?: string[];\n}\n","import { DomainResource } from '../domain-resource';\nimport { Identifier } from '../terminology/identifier';\nimport { Reference } from '../reference';\nimport { CodeableConcept } from '../terminology/codeableconcept';\nimport { Attachment } from '../individuals/attachment';\nimport { ContactPoint } from '../terminology/contactpoint';\nimport { Period } from '../period';\n\nexport class HealthcareService extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    resourceType: string = 'HealthcareService';\n    identifier?: Identifier[];\n    active?: boolean;\n    providedBy?: Reference; // (Organization)\n    category?: CodeableConcept[];\n    type?: CodeableConcept[];\n    specialty?: CodeableConcept[];\n    location?: Reference[]; // (Location)\n    name?: string;\n    comment?: string;\n    extraDetails?: string; // Regex: \\s*(\\S|\\s)*\n    photo?: Attachment;\n    telecom?: ContactPoint[];\n    coverageArea?: Reference; // (Location)\n    serviceProvisionCode?: CodeableConcept[];\n    eligibility?: { // BackboneElement\n        code?: CodeableConcept;\n        comment?: string;\n    }[];\n    program?: CodeableConcept[];\n    characteristic?: CodeableConcept[];\n    communication?: CodeableConcept[];\n    referralMethod?: CodeableConcept[];\n    appointmentRequired?: boolean;\n    availableTime?: {\n        daysOfWeek?: string[];\n        allDay?: boolean;\n        availableStartTime?: Date; // Regex: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?\n        availableEndTime?: Date;\n    }[];\n    notAvailable?: { // BackboneElement\n        description: string;\n        during?: Period;\n    }[];\n    availabilityExceptions?: string;\n    endpoint?: Reference[]; // (Endpoint)\n\n    public static getNew() {\n        return new HealthcareService({name: [HealthcareService.getNew()]});\n    }\n}\n","import {DomainResource} from '../domain-resource';\nimport {Address, CodeableConcept, Coding, ContactPoint, Identifier, Reference} from '..';\n\nexport class Location extends DomainResource {\n  resourceType: string = 'Location';\n  identifier?: Identifier[];\n  status?: 'active' | 'suspended' | 'inactive';\n  operationalStatus?: Coding;\n  name?: string;\n  alias?: string[];\n  description?: string;\n  mode?: 'instance' | 'kind';\n  type?: CodeableConcept[];\n  telecom?: ContactPoint;\n  address?: Address;\n  physicalType?: CodeableConcept;\n  position?: {\n    longitude: number; // decimal\tRegex: -?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    latitude: number;\n    altitude?: number;\n  }[];\n  managingOrganization?: Reference; // (Organization)\n  partOf?: Reference; // (Location)\n  hoursOfOperation?: {\n    daysOfWeek?: string[];\n    allDay?: boolean;\n    openingTime?: Date; // Regex: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?\n    closingTime?: Date;\n  }[];\n  availabilityExceptions?: string;\n  endpoint?: Reference; // (Endpoint)\n}\n","import {DomainResource} from '../domain-resource';\nimport {Address, CodeableConcept, ContactPoint, HumanName, Identifier, Reference} from '..';\n\nexport class Organization extends DomainResource {\n  resourceType: string = 'Organization';\n  identifier?: Identifier[];\n  active?: boolean;\n  type?: CodeableConcept[];\n  name?: string;\n  alias?: string[];\n  telecom?: ContactPoint[];\n  address?: Address[];\n  partOf?: Reference; // (Organization)\n  contact?: { // BackboneElement\n    purpose?: CodeableConcept;\n    name?: HumanName;\n    telecom?: ContactPoint[];\n    address?: Address;\n  }[];\n  endpoint?: Reference; // (Endpoint)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, ContactPoint, Identifier, Period, Reference} from '..';\n\nexport class OrganizationAffiliation extends DomainResource {\n  resourceType: string = 'OrganizationAffiliation';\n  identifier?: Identifier[];\n  active?: boolean;\n  period?: Period;\n  organization?: Reference; // (Organization)\n  participatingOrganization \t?: Reference; // (Organization)\n  network?: Reference[]; // (Organization)\n  code?: CodeableConcept[];\n  specialty?: CodeableConcept[];\n  location?: Reference; // (Location)\n  healthcareService?: Reference; // (HealthcareService)\n  telecom?: ContactPoint[];\n  endpoint?: Reference; // (Endpoint)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier} from '../terminology';\nimport {Reference} from '../reference';\nimport {Period} from '../period';\n\nexport class Account extends DomainResource {\n    identifier?: Identifier[];\n    status: 'active ' | 'inactive' | 'entered-in-error' | 'on-hold' | 'unknown';\n    type?: CodeableConcept;\n    name?: string;\n    subject?: Reference[]; // (Patient | Device | Practitioner | PractitionerRole | Location | HealthcareService | Organization)\n    servicePeriod?: Period;\n    coverage?: { // BackboneElement\n        coverage: Reference; // (Coverage)\n        priority: string;\n    }[];\n    owner?: Reference; // (Organization)\n    description?: string;\n    guarantor?: { // BackboneElement\n        party: Reference; // (Patient, RelatedPerson, Organization)\n        onHold?: boolean;\n        period?: Period;\n    }[];\n    partOf?: Reference; // Account\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, SimpleQuantity} from '../terminology';\nimport {Reference} from '../reference';\nimport {Period} from '../period';\nimport {Money} from '../money';\n\nexport class Coverage extends DomainResource {\n  identifier?: Identifier[];\n  status: 'active' | 'cancelled' | 'draft' | 'entered-in-error';\n  type?: CodeableConcept;\n  policyHolder?: Reference; // (Patient, RelatedPerson, Organization)\n  subscriber?: Reference; // (Patient, RelatedPerson)\n  subscriberId?: string;\n  beneficiary: Reference; // (Patient)\n  dependent?: string;\n  relationship?: CodeableConcept;\n  period?: Period;\n  payor: Reference[]; // (Organization | Patient | RelatedPerson)\n  class?: {\n    type: CodeableConcept;\n    value: string;\n    name?: string;\n  }[];\n  order?: string;\n  network?: string;\n  costToBeneficiary?: { // BackboneElement\n    type?: CodeableConcept;\n    valueQuantity: SimpleQuantity;\n    valueMoney: Money;\n    exception?: { // BackboneElement\n      type: CodeableConcept;\n      period?: Period;\n    }[];\n  }[];\n  subrogation?: boolean;\n  contract?: Reference[]; // (Contract)\n}\n","import {DomainResource} from '../domain-resource';\nimport {Attachment, CodeableConcept, Coding, Identifier, Money, Period, Quantity, Reference, SimpleQuantity} from '..';\nimport {Timing} from '../timing';\nimport {Annotation} from '../workflow';\nimport {Signature} from '../signature';\n\nexport class Contract extends DomainResource {\n\n    resourceType: string = 'Contract';\n    identifier?: Identifier[];\n    url?: string; // uri\n    version?: string;\n    status?: 'amended' | 'appended' | 'cancelled' | 'disputed' | 'entered-in-error' |\n        'executable' | 'executed' | 'negotiable' | 'offered' | 'policy' | 'rejected' | 'renewed' | 'revoked' | 'resolved' | 'terminated';\n    legalState?: CodeableConcept;\n    instantiatesCanonical?: Reference; // (Contract)\n    instantiatesUri?: string; // uri\n    contentDerivative?: CodeableConcept;\n    issued?: Date;\n    applies?: Period;\n    expirationType?: CodeableConcept;\n    subject?: Reference[]; // (Any)\n    authority?: Reference[]; // (Organization)\n    domain?: Location[]; // (Location)\n    site?: Location[]; // (Location)\n    name?: string;\n    title?: string;\n    subtitle?: string;\n    alias?: string[];\n    author?: Reference; // (Patient | Practitioner | PractitionerRole | Organization)\n    scope?: CodeableConcept;\n    topicCodeableConcept?: CodeableConcept;\n    topicReference?: Reference; // (Any)\n    type?: CodeableConcept;\n    subType?: CodeableConcept[];\n    contentDefinition?: { // BackboneElement\n        type: CodeableConcept;\n        subType?: CodeableConcept;\n        publisher?: Reference;\n        publicationDate?: Date;\n        publicationStatus: 'amended' | 'appended' | 'cancelled' | 'disputed' | 'entered-in-error' |\n            'executable' | 'executed' | 'negotiable' | 'offered' | 'policy' | 'rejected' | 'renewed' | 'revoked' | 'resolved' | 'terminated';\n        copyright?: string; // markdown\n    };\n    term?: { // BackboneElement\n        identifier?: Identifier;\n        issued?: Date;\n        applies?: Period;\n        topicCodeableConcept?: CodeableConcept;\n        topicReference?: Reference; // (Any)\n        type?: CodeableConcept;\n        subType?: CodeableConcept;\n        text?: string;\n        securityLabel?: { // BackboneElement\n            number?: number[];\n            classification: Coding;\n            category?: Coding;\n            control?: Coding[];\n        }[];\n        offer: { // BackboneElement\n            identifier?: Identifier[];\n            party?: { // BackboneElement\n                reference: Reference[]; // (Patient | RelatedPerson | Practitioner | PractitionerRole | Device | Group | Organization)\n                role: CodeableConcept;\n            }[];\n            topic?: Reference; // (Any)\n            type?: CodeableConcept;\n            decision?: CodeableConcept;\n            decisionMode?: CodeableConcept[];\n            answer?: {\n                valueBoolean: boolean;\n                valueDecimal: number; // decimal\n                valueInteger: number; // integer\n                valueDate: Date;\n                valueDateTime: Date;\n                valueTime: Date;\n                valueString: string;\n                valueUri: string; // uri\n                valueAttachment: Attachment;\n                valueCoding: Coding;\n                valueQuantity: Quantity;\n                valueReference: Reference; // (Any)\n            }[];\n            text?: string;\n            linkId?: string[];\n            securityLabelNumber?: number[];\n        };\n        asset?: {\n            scope?: CodeableConcept;\n            type?: CodeableConcept[];\n            typeReference?: Reference[]; // (Any)\n            subtype?: CodeableConcept[];\n            relationship?: Coding;\n            context?: { // BackboneElement\n                reference?: Reference; // (Any)\n                code?: CodeableConcept[];\n                text?: string;\n            }[];\n            condition?: string;\n            periodType?: CodeableConcept[];\n            period?: Period[];\n            usePeriod?: Period[];\n            text?: string;\n            linkId?: string[];\n            answer?: Reference[]; // Reference to another Element\n            securityLabelNumber?: number[];\n            valuedItem?: { // BackboneElement\n                entityCodeableConcept?: CodeableConcept;\n                entityReference?: Reference; // (Any)\n                identifier?: Identifier;\n                effectiveTime?: Date;\n                quantity?: SimpleQuantity;\n                unitPrice?: Money;\n                factor?: number; // decimal\n                points?: number; // decimal\n                net?: Money;\n                payment?: string;\n                paymentDate?: Date;\n                responsible?: Reference; // (Organization | Patient | Practitioner | PractitionerRole | RelatedPerson)\n                recipient?: Reference; // (Organization | Patient | Practitioner | PractitionerRole | RelatedPerson)\n                linkId?: string[];\n                securityLabelNumber?: number[];\n            }[];\n        }[];\n        action?: { // BackboneElement\n            doNotPerform?: boolean;\n            type: CodeableConcept;\n            subject?: {\n                reference: Reference[]; // (Patient | RelatedPerson | Practitioner | PractitionerRole | Device | Group | Organization)\n                role?: CodeableConcept;\n            }[];\n            intent: CodeableConcept;\n            linkId?: string[];\n            status: CodeableConcept;\n            context?: Reference; // (Encounter | EpisodeOfCare)\n            contextLinkId?: string[];\n            occurrenceDateTime?: Date;\n            occurrencePeriod?: Period;\n            occurrenceTiming?: Timing;\n            requester?: Reference[]; // (Patient | RelatedPerson | Practitioner | PractitionerRole | Device | Group | Organization)\n            requesterLinkId?: string[];\n            performerType?: CodeableConcept[];\n            performerRole?: CodeableConcept;\n            performer?: Reference; // (RelatedPerson | Patient | Practitioner | PractitionerRole | CareTeam | Device | Substance | Organization | Location)\n            performerLinkId?: string[];\n            reasonCode?: CodeableConcept[];\n            reasonReference?: Reference[]; // (Condition | Observation | DiagnosticReport | DocumentReference | Questionnaire | QuestionnaireResponse)\n            reason?: string[];\n            reasonLinkId?: string[];\n            note?: Annotation[];\n            securityLabelNumber?: number[];\n        }[];\n        group?: Reference[]; // Reference to another Element\n    }[];\n    supportingInfo?: Reference[]; // (Any)\n    relevantHistory?: Reference[]; // (Provenance)\n    signer?: { // BackboneElement\n        type: Coding;\n        party: Reference; // (Organization | Patient | Practitioner | PractitionerRole | RelatedPerson)\n        signature: Signature[];\n    }[];\n    friendly?: { // BackboneElement\n        contentAttachment: Attachment;\n        contentReference: Reference; // (Composition | DocumentReference | QuestionnaireResponse)\n    }[];\n    legal?: {\n        contentAttachment: Attachment;\n        contentReference: Reference; // (Composition | DocumentReference | QuestionnaireResponse)\n    }[];\n    rule?: {\n        contentAttachment: Attachment;\n        contentReference: Reference; // (DocumentReference)\n    }[];\n    legallyBindingAttachment?: Attachment;\n    legallyBindingReference?: Reference; // (Composition | DocumentReference | QuestionnaireResponse | Contract)\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, ContactDetail, Identifier, UsageContext} from '../terminology';\nimport {Period} from '../period';\nimport {Reference} from '../reference';\nimport {Money} from '../money';\n\nexport class ChargeItemDefinition extends DomainResource {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n\n    url: string;\n    identifier?: Identifier[];\n    version?: string;\n    title?: string;\n    derivedFromUri?: string[];\n    partOf?: string[];\n    replaces?: string[];\n    status: 'draft' | 'active' | 'retired' | 'unknown';\n    experimental?: boolean;\n    date?: Date;\n    publisher?: string;\n    contact?: ContactDetail[];\n    description?: string;\n    useContext?: UsageContext[];\n    jurisdiction?: CodeableConcept[];\n    copyright?: string;\n    approvalDate?: Date;\n    lastReviewDate?: Date;\n    effectivePeriod?: Period;\n    code?: CodeableConcept;\n    instance?: Reference[];\n    applicability?: {   // BackboneElement\n        description?: string;\n        language?: string;\n        expression?: string;\n    }[];\n    propertyGroup?: { // BackboneElemen\n        applicability?: string[];\n        priceComponent?: {\n            type: 'base' | 'surcharge' | 'deduction' | 'discount' | 'tax' | 'informational';\n            code?: CodeableConcept;\n            factor?: number; // decimal\n            amount?: Money;\n        }[];\n    }[];\n}\n","import {Element} from './element';\nimport {Coding} from './terminology/coding';\nimport {Reference} from './reference';\n\nexport class Signature extends Element {\n    type: Coding[];\n    when: Date;\n    who: Reference; // (Practitioner | PractitionerRole | RelatedPerson | Patient | Device | Organization)\n    onBehalfOf?: Reference; // (Practitioner | PractitionerRole | RelatedPerson | Patient | Device | Organization)\n    targetFormat?: string;\n    sigFormat?: string;\n    data?: string; // base64Binary Regex: (\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept} from '..';\n\nexport class OperationOutcome extends DomainResource {\n    issue: { // BackboneElement\n        severity: 'fatal' | 'error' | 'warning' | 'information';\n        code: string;\n        details?: CodeableConcept;\n        diagnostics?: string;\n        location?: string[];\n        expression?: string[];\n    }[];\n}\n","import {Element} from '../element';\nimport {Reference} from '../reference';\n\nexport class Annotation extends Element {\n    constructor(source?: any) {\n        super();\n        if (source)\n            for (const key of Object.keys(source)) {\n                this[key] = source[key];\n            }\n    }\n    authorReference?: Reference; // (Practitioner | Patient | RelatedPerson | Organization)\n    authorString?: string;\n    time?: Date;\n    text: string;\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\n\nexport class Appointment extends DomainResource {\n    resourceType: string = 'Appointment';\n    identifier?: Identifier[];\n    status: 'proposed' | 'pending' | 'booked' | 'arrived' | 'fulfilled' | 'cancelled' | 'noshow' | 'entered-in-error' | 'checked-in' | 'waitlist';\n    cancelationReason?: CodeableConcept;\n    serviceCategory?: CodeableConcept[];\n    serviceType?: CodeableConcept[];\n    specialty?: CodeableConcept[];\n    appointmentType?: CodeableConcept;\n    reasonCode?: CodeableConcept[];\n    reasonReference?: Reference[]; // (Condition | Procedure | Observation | ImmunizationRecommendation)\n    priority?: number; // unsignedInt [0]|([1-9][0-9]*)\n    description?: string;\n    supportingInformation?: Reference[]; // (Any)\n    start?: Date; // instant Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))\n    end?: Date; // instant\n    minutesDuration?: number; // positiveInt\n    slot?: Reference[]; // (Slot)\n    created?: Date;\n    comment?: string;\n    patientInstruction?: string;\n    basedOn?: Reference[]; // (ServiceRequest)\n    participant: { // BackboneElement\n        type?: CodeableConcept[];\n        actor?: Reference; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Device | HealthcareService | Location)\n        required?: 'required' | 'optional' | 'information-only';\n        status: 'accepted' | 'declined' | 'tentative' | 'needs-action';\n        period?: Period;\n    }[];\n    requestedPeriod?: Period[];\n\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Reference} from '..';\n\nexport class AppointmentResponse extends DomainResource {\n    resourceType: string = 'AppointmentResponse';\n    identifier?: Identifier[];\n    appointment: Reference; // (Appointment)\n    start?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))\n    end?: Date;\n    participantType?: CodeableConcept[];\n    actor?: Reference; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Device | HealthcareService | Location)\n    participantStatus: 'accepted' | 'declined' | 'tentative' | 'in-process' | 'completed' | 'needs-action' | 'entered-in-error';\n    comment?: string;\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\n\nexport class Schedule extends DomainResource {\n    resourceType: string = 'Schedule';\n    identifier?: Identifier[];\n    active?: boolean;\n    serviceCategory?: CodeableConcept[];\n    serviceType?: CodeableConcept[];\n    specialty?: CodeableConcept[];\n    actor: Reference[]; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Device | HealthcareService | Location)\n    planningHorizon?: Period;\n    comment?: string;\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Reference} from '..';\n\nexport class Slot extends DomainResource {\n    resourceType: string = 'Slot';\n    identifier?: Identifier[];\n    serviceCategory?: CodeableConcept[];\n    serviceType?: CodeableConcept[];\n    specialty?: CodeableConcept[];\n    appointmentType?: CodeableConcept;\n    schedule: Reference;\n    status: 'busy' | 'free' | 'busy-unavailable' | 'busy-tentative' | 'entered-in-error';\n    start: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))\n    end: Date;\n    overbooked?: boolean;\n    comment?: string;\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, Period, Reference} from '..';\nimport {Annotation} from './annotation';\n\nexport class Task extends DomainResource {\n    resourceType: string = 'Task';\n    identifier?: Identifier[];\n    instantiatesCanonical?: string; // canonical(ActivityDefinition)\n    instantiatesUri?: string; // uri\n    basedOn?: Reference[]; // (Any)\n    groupIdentifier?: Identifier;\n    partOf?: Reference[]; // (Task)\n    status: 'draft' | 'requested' | 'received' | 'accepted' | '+'; // TaskStatus (Required)\n    statusReason?: CodeableConcept;\n    businessStatus?: CodeableConcept;\n    intent: 'unknown' | 'proposal' | 'plan' | 'order' | 'original-order' | 'reflex-order' | 'filler-order' | 'instance-order' | 'option';\n    priority?: 'routine' | 'urgent' | 'asap' | 'stat';\n    code?: CodeableConcept;\n    description?: string;\n    focus?: Reference; // (Any)\n    for?: Reference; // (Any)\n    encounter?: Reference; // (Encounter)\n    executionPeriod?: Period;\n    authoredOn?: Date;\n    lastModified?: Date;\n    requester?: Reference; // (Device | Organization | Patient | Practitioner | PractitionerRole | RelatedPerson)\n    performerType?: CodeableConcept[];\n    owner?: Reference; // (Practitioner | PractitionerRole | Organization | CareTeam | HealthcareService | Patient | Device | RelatedPerson)\n    location?: Reference; // (Location)\n    reasonCode?: CodeableConcept;\n    reasonReference?: Reference; // (Any)\n    insurance?: Reference; // (Coverage | ClaimResponse)\n    note?: Annotation[];\n    relevantHistory?: Reference[]; // (Provenance)\n    restriction?: { // BackboneElement\n        repetitions?: number // positiveInt Regex: +?[1-9][0-9]*\n        period?: Period;\n        recipient?: Reference[]; // (Patient | Practitioner | PractitionerRole | RelatedPerson | Group | Organization)\n    };\n    input?: { // BackboneElement\n        type: CodeableConcept;\n        valueString: string; // *\n    }[];\n    output?: { // BackboneElement\n        type: CodeableConcept;\n        valueString: string; // *\n    }[];\n}\n","import {DomainResource} from '../domain-resource';\nimport {Reference} from '../reference';\nimport {CodeableConcept, Signature} from '..';\nimport {Timing} from '../timing';\n\nexport class VerificationResult extends DomainResource {\n    resourceType: string = 'VerificationResult';\n    target?: Reference[]; // (Any)\n    targetLocation?: string[];\n    need?: CodeableConcept; // none | initial | periodic\n    status: 'attested' | 'validated' | 'in-process' | 'req-revalid' | 'val-fail' | 'reval-fail';\n    statusDate?: Date;\n    validationType?: CodeableConcept; // nothing | primary | multiple\n    validationProcess?: CodeableConcept[];\n    frequency?: Timing;\n    lastPerformed?: Date;\n    nextScheduled?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n    failureAction?: CodeableConcept;\n    primarySource?: { // BackboneElement\n        who?: Reference; // (Organization | Practitioner | PractitionerRole)\n        type?: CodeableConcept[];\n        communicationMethod?: CodeableConcept[];\n        validationStatus?: CodeableConcept; // successful | failed | unknown\n        validationDate?: Date;\n        canPushUpdates?: CodeableConcept; // yes | no | undetermined\n        pushTypeAvailable?: CodeableConcept[];\n    }[];\n    attestation?: { // BackboneElement\n        who?: Reference; // (Practitioner | PractitionerRole | Organization)\n        onBehalfOf?: Reference; // (Organization | Practitioner | PractitionerRole)\n        communicationMethod?: CodeableConcept;\n        date?: Date; // Regex: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\n        sourceIdentityCertificate?: string;\n        proxyIdentityCertificate?: string;\n        proxySignature?: Signature;\n        sourceSignature?: Signature;\n    };\n    validator?: { // BackboneElement\n        organization: Reference; // (Organization)\n        identityCertificate?: string;\n        attestationSignature?: Signature;\n    }[];\n}\n","import {BackboneElement} from './terminology/backboneelement';\nimport {Range} from './range';\nimport {Period} from './period';\nimport {CodeableConcept} from './terminology/codeableconcept';\n\nexport class Timing extends BackboneElement {\n  constructor(source?: any) {\n    super();\n    if (source)\n      for (const key of Object.keys(source)) {\n        this[key] = source[key];\n      }\n  }\n  event?: Date[];\n  repeat?: { // Element\n    boundsDuration?: Date;\n    boundsRange?: Range;\n    boundsPeriod?: Period;\n    count?: number; // positiveInt Regex: +?[1-9][0-9]*\n    countMax?: number;\n    duration?: number; // decimal Regex: -?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    durationMax?: number;\n    durationUnit?: 's' | 'min' | 'h' | 'd' | 'wk' | 'mo' | 'a'; // unit of time (UCUM)\n    frequency?: number; // positiveInt Regex: +?[1-9][0-9]*\n    frequencyMax?: number;\n    period?: number; // decimal Regex: -?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?\n    periodMax?: number;\n    periodUnit?: 's' | 'min' | 'h' | 'd' | 'wk' | 'mo' | 'a'; // unit of time (UCUM)\n    dayOfWeek?: string[];\n    timeOfDay?: Date[]; // Regex: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?\n    when?: string[]; // Regex: [^\\s]+(\\s[^\\s]+)*\n    offset?: number; // unsignedInt Regex: [0]|([1-9][0-9]*)\n  };\n  code?: CodeableConcept;\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier, SimpleQuantity} from '../terminology';\nimport {Ratio} from '../ratio';\nimport {Reference} from '../reference';\n\nexport class Substance extends DomainResource {\n    identifier?: Identifier[];\n    status?: 'active' | 'inactive' | 'entered-in-error';\n    category?: CodeableConcept[];\n    code: CodeableConcept;\n    description?: string;\n    instance?: { // BackboneElement\n        identifier?: Identifier;\n        expiry?: Date;\n        quantity?: SimpleQuantity;\n    }[];\n    ingredient?: { // BackboneElement\n        quantity?: Ratio;\n        substanceCodeableConcept?: CodeableConcept;\n        substanceReference?: Reference;\n    }[];\n}\n","import {DomainResource} from '../domain-resource';\nimport {CodeableConcept, Identifier} from '../terminology';\nimport {Reference} from '../reference';\nimport {Money} from '../money';\nimport {Annotation} from '../workflow';\n\nexport class Invoice extends DomainResource {\n    resourceType: string = 'Invoice';\n    identifier?: Identifier[];\n    status: 'draft' | 'issued' | 'balanced' | 'cancelled' | 'entered-in-error';\n    cancelledReason?: string;\n    type?: CodeableConcept;\n    subject?: Reference;\n    recipient?: Reference;\n    date?: Date;\n    participant?: { // BackboneElement\n        role?: CodeableConcept;\n        actor: Reference;\n    }[];\n    issuer?: Reference;\n    account?: Reference;\n    lineItem?: { // BackboneElement\n        sequence?: number;\n        chargeItemReference: Reference;\n        chargeItemCodeableConcept: CodeableConcept;\n        priceComponent?: { // BackboneElement\n            type: 'base' | 'surcharge' | 'deduction' | 'discount' | 'tax' | 'informational';\n            code?: CodeableConcept;\n            factor?: number;\n            amount?: Money;\n        }[];\n    }[];\n    totalPriceComponent?: Reference[];\n    totalNet?: Money;\n    totalGross?: Money;\n    paymentTerms?: string;\n    note?: Annotation[];\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {FhirQueryBuilder} from './query-builder/fhir-query-builder';\nimport {SearchSet} from './search-set/search-set';\nimport {BundleEntry, CapabilityStatement, OperationOutcome} from './model';\nimport {FHIR_CONFIG, FhirConfig} from '../fhir-config';\nimport {tap} from 'rxjs/operators';\nimport {Bundle} from './model';\nimport {merge} from 'lodash';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FhirService {\n    public headers;\n    private conformance: CapabilityStatement;\n\n    constructor(@Inject(FHIR_CONFIG) public config: FhirConfig, public httpClient: HttpClient) {\n    }\n\n    set base(base: string) {\n        this.config.base = base;\n    }\n\n    getConformanceStatement(headers?): Observable<CapabilityStatement> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        if (this.conformance) return of(this.conformance);\n        return this.httpClient.get<CapabilityStatement>(`${this.config.base}/metadata`, {headers: mergedHeaders}).pipe(\n            tap(result => this.conformance = result),\n        );\n    }\n\n    public read<T>(resourceType: string, id: string, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.get<T>(`${this.config.base}/${resourceType}/${id}`, {headers: mergedHeaders});\n    }\n\n    public vread<T>(resourceType: string, id: string, v: number, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.get<T>(`${this.config.base}/${resourceType}/${id}/_history/${v}`, {headers: mergedHeaders});\n    }\n\n    public update<T>(resource: any, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.put<T>(`${this.config.base}/${resource.resourceType}/${resource.id}`, resource, {headers: mergedHeaders});\n    }\n\n    public save<T>(resource: any, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        const resourceType = resource.resourceType;\n        if (resource.hasOwnProperty('id')) {\n            return this.update(resource, headers);\n        } else {\n            return this.create(resource, headers);\n        }\n    }\n\n    public patch<T>(resource: any, body: any, headers?): Observable<T> {\n        const headersToAttach = {};\n        merge(headersToAttach, this.headers);\n        headersToAttach['Content-Type'] = 'application/json-patch+json';\n        return this.httpClient.patch<T>(`${this.config.base}/${resource.resourceType}/${resource.id}`, body, {headers: headersToAttach});\n    }\n\n    public delete<T>(resourceType: string, id: string, headers?): Observable<OperationOutcome> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.delete<OperationOutcome>(`${this.config.base}/${resourceType}/${id}`, {headers: mergedHeaders});\n    }\n\n    public create<T>(resource: any, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.post<T>(`${this.config.base}/${resource.resourceType}`, resource, {headers: mergedHeaders});\n    }\n\n    // ToDo:\n    public searchByQuery(qb: FhirQueryBuilder, headers?): Observable<Bundle> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.get<Bundle>(`${this.config.base}/${qb.resourceName}`, {\n            params: qb.paramsAsHttpParams(),\n            headers: mergedHeaders\n        });\n    }\n\n    public searchBySet<T>(ss: SearchSet, headers?): Observable<Bundle> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.get<Bundle>(`${this.config.base}/${ss.resourceName}?_sort=-_id`, {\n            params: ss.paramsAsObject(),\n            headers: mergedHeaders,\n        });\n    }\n\n    public searchByUrl<T>(url: string, headers?): Observable<T> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.get<T>(url, {headers: mergedHeaders});\n    }\n\n    public search_all() {\n\n    }\n\n    public capabilities() {\n\n    }\n\n    public transaction(bundle: Bundle, headers?): Observable<any> {\n        const mergedHeaders = Object.assign(this.headers, headers);\n        return this.httpClient.post(this.config.base, bundle,\n            {\n                headers: mergedHeaders\n            });\n    }\n\n    public history() {\n\n    }\n\n    public history_type() {\n\n    }\n\n    public history_all() {\n\n    }\n\n    public executeQuery<T>(qb: FhirQueryBuilder): Observable<T> {\n        return this.httpClient.get<T>(qb.query, {headers: this.headers});\n    }\n\n    public createTransactionBundle(source: any, keys: string[]): Bundle {\n        const bundle: Bundle = new Bundle();\n        bundle.type = 'transaction';\n        bundle.resourceType = 'Bundle';\n        bundle.entry = [];\n        keys.filter(key => source.hasOwnProperty(key))\n            .map(key => {\n                const v = source[key];\n                if (this.isIterable(v)) {\n                    for (const e of v) {\n                        bundle.entry.push(this.createBundleEntry(e));\n                    }\n                } else {\n                    bundle.entry.push(this.createBundleEntry(v));\n                }\n            });\n        return bundle;\n    }\n\n    private isIterable(value) {\n        return value !== null && Symbol.iterator in Object(value);\n    }\n\n    private createBundleEntry(entry): BundleEntry {\n        return {\n            fullUrl: `urn:uuid:${entry.uuid}`,\n            resource: entry,\n            request: {\n                url: !entry.id ? entry.resourceType : `${entry.resourceType}/${entry.id}`,\n                method: entry.id ? 'PUT' : 'POST',\n            },\n        };\n    }\n\n    /*generateCodeableConcept(code: string, system?: string, display?: string): CodeableConcept {\n        const codeableConcept: CodeableConcept = new CodeableConcept();\n        codeableConcept.coding = [{code: code}];\n        if (system) codeableConcept.coding[0].system = system;\n        if (display) codeableConcept.coding[0].display = display;\n        return codeableConcept;\n    }\n\n    generateIdentifier(): Identifier {\n        const identifier: Identifier = new Identifier();\n        identifier.system = FhirService.IdentifierSystem;\n        identifier.value = UUID.UUID();\n        return identifier;\n    }*/\n}\n\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FHIR_CONFIG, FhirConfig} from '../fhir-config';\nimport {FhirService} from './fhir-service';\nimport {Observable} from 'rxjs';\nimport {Encounter} from './model/management';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FhirAdvancedService extends FhirService {\n\n    headers: any;\n    fhircqrs: string;\n\n    constructor(@Inject(FHIR_CONFIG) public config: FhirConfig, public httpClient: HttpClient) {\n        super(config, httpClient);\n        this.fhircqrs = config.fhircqrs;\n    }\n\n    public setAuthentication(headers: any) {\n        this.headers = headers;\n    }\n\n    public searchInConcept(part: string, id: string, version?: string): Observable<ConceptDto[]> {\n        return this.httpClient\n            .get<ConceptDto[]>(`${this.fhircqrs}/CodeSystem/searchInConcept`,\n                {headers: this.headers, params: {part: part, id: id, version: version}},\n            );\n    }\n\n    public findActiveEncounterByPatient(patientId: string): Observable<Encounter[]> {\n        return this.httpClient\n            .get<Encounter[]>(`${this.fhircqrs}/Encounter/findActiveEncounterByPatient`,\n                {headers: this.headers, params: {patientId: patientId}},\n            );\n    }\n\n}\n\nexport class ConceptDto {\n    system: string;\n    code: string;\n    display: string;\n    definition: string;\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'fhirAddressLineExtract',\n})\nexport class FhirAddressLineExtract implements PipeTransform {\n\n    transform(value: any, ...args: any[]): string {\n        if (value && value[0] && value[0].line && value[0].line[0]) return value[0].line[0];\n        return '';\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fhirContactExtract'\n})\nexport class FhirContactExtractPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): string {\n    if (value && value.contact && value.contact[0] && value.contact[0].name) {\n      return `${value.contact[0].name.prefix} ${value.contact[0].name.given[0]} ${value.contact[0].name.family}`;\n    }\n    return '';\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Dosage} from '../model/medications';\n\n@Pipe({\n    name: 'fhirDosageExctract',\n})\nexport class FhirDosageExctractPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): string {\n        let result: any = '';\n        const v = value as Dosage[];\n        if (v && args && args.length > 0) {\n\n            if (v[0] && v[0].doseAndRate && args[0] === 'doseQuantityValue') {\n                result = v[0].doseAndRate[0].doseQuantity.value;\n            }\n            if (v[0] && v[0].doseAndRate && args[0] === 'doseQuantityUnit') {\n                result = v[0].doseAndRate[0].doseQuantity.unit;\n            }\n            if (v[0] && v[0].doseAndRate && args[0] === 'rateQuantityValue') {\n                result = v[0].doseAndRate[0].rateQuantity.value;\n            }\n            if (v[0] && v[0].doseAndRate && args[0] === 'rateQuantityUnit') {\n                result = v[0].doseAndRate[0].rateQuantity.unit;\n            }\n            if (v[0] && v[0].maxDosePerAdministration && args[0] === 'maxDoseValue') {\n                result = v[0].maxDosePerAdministration.value;\n            }\n            if (v[0] && v[0].maxDosePerAdministration && args[0] === 'maxDoseUnit') {\n                result = v[0].maxDosePerAdministration.unit;\n            }\n            if (v[0] && args[0] === 'text') {\n                result = v[0].text;\n            }\n        }\n        return result;\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'fhirEmailExtract'\n})\nexport class FhirEmailExtractPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): string {\n        let email: string = '';\n        if (value && value.length > 0) {\n            for (let contactPoint of value) {\n                if (contactPoint.system === 'email') email = email.concat(contactPoint.value, ', ');\n            }\n        }\n        return email.trim().slice(0, email.length - 2);\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'fhirNameExtract',\n})\nexport class FhirNameExtractPipe implements PipeTransform {\n\n    transform(value: any, ...args: any[]): string {\n        const p = value;\n        if (p && p.hasOwnProperty('name') && p.name.length > 0) {\n            return `${p.name[0].given[0]} ${p.name[0].family}`;\n        }\n        return '';\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'fhirTelecomPhoneExtract'\n})\nexport class FhirTelecomPhoneExtract implements PipeTransform {\n\n  transform(value: any, ...args: any[]): string {\n    let phone: string = '';\n    if (value && value.length > 0) {\n      for (let contactPoint of value) {\n        if (contactPoint.system === 'phone') phone = phone.concat(contactPoint.value, ', ');\n      }\n    }\n    return phone.trim().slice(0,phone.length-2);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fhirTelecomWebExtract'\n})\nexport class FhirTelecomWebExtractPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): string {\n    let url: string = '';\n    if (value && value.length > 0) {\n      for (let contactPoint of value) {\n        if (contactPoint.system === 'url') url = url.concat(contactPoint.value, ', ');\n      }\n    }\n    return url.trim().slice(0,url.length-2);\n  }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FHIR_CONFIG, FhirConfig} from './fhir/fhir-config';\nimport {FhirService} from './fhir/r4/fhir-service';\nimport {FhirAdvancedService} from './fhir/r4/fhir-advanced.service';\nimport {FhirAddressLineExtract} from './fhir/r4/fhir-pipes/fhir-address-line-extract.pipe';\nimport {FhirContactExtractPipe} from './fhir/r4/fhir-pipes/fhir-contact-extract.pipe';\nimport {FhirDosageExctractPipe} from './fhir/r4/fhir-pipes/fhir-dosage-exctract.pipe';\nimport {FhirEmailExtractPipe} from './fhir/r4/fhir-pipes/fhir-email-extract.pipe';\nimport {FhirNameExtractPipe} from './fhir/r4/fhir-pipes/fhir-patient-name-extract.pipe';\nimport {FhirTelecomPhoneExtract} from './fhir/r4/fhir-pipes/fhir-telecom-phone-extract.pipe';\nimport {FhirTelecomWebExtractPipe} from './fhir/r4/fhir-pipes/fhir-telecom-web-extract.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n        declarations: [\n            FhirAddressLineExtract,\n            FhirContactExtractPipe,\n            FhirDosageExctractPipe,\n            FhirEmailExtractPipe,\n            FhirNameExtractPipe,\n            FhirTelecomPhoneExtract,\n            FhirTelecomWebExtractPipe,\n        ],\n        imports: [\n            CommonModule,\n        ],\n        exports: [\n            FhirAddressLineExtract,\n            FhirContactExtractPipe,\n            FhirDosageExctractPipe,\n            FhirEmailExtractPipe,\n            FhirNameExtractPipe,\n            FhirTelecomPhoneExtract,\n            FhirTelecomWebExtractPipe,\n        ],\n    },\n)\nexport class LmsNgFhirModule {\n\n    public static forRoot(config: FhirConfig): ModuleWithProviders {\n\n        return <ModuleWithProviders>{\n            ngModule: LmsNgFhirModule,\n            providers: [\n                FhirService,\n                FhirAdvancedService,\n                {\n                    provide: FHIR_CONFIG,\n                    useValue: config,\n                },\n            ],\n        };\n    }\n}\n","import {HttpParams} from \"@angular/common/http\";\n\nexport class InstanceLevelInteractions {\n    public static read: number = 0;\n    public static vread: number = 1;\n    public static update: number = 2;\n    public static patch: number = 3;\n    public static delete: number = 4;\n    public static history: number = 5;\n    public static create: number = 6;\n}\n\nexport class TypeLevelInteractions {\n    public static create: number = 10;\n    public static search: number = 11;\n    public static history: number = 12;\n}\n\nexport class WholeSystemInteractions {\n    public static capabilities: number = 21;\n    public static batch: number = 22;\n    public static search: number = 23;\n    public static history: number = 24;\n}\n\nexport class CommonSearchParameters {\n    public static _id: string = '_id';\n    public static _lastUpdated: string = '_lastUpdated';\n    public static _tag: string = '_tag';\n    public static _profile: string = '_profile';\n    public static _security: string = '_security';\n    public static _text: string = '_text';\n    public static _content: string = '_content';\n    public static _list: string = '_list';\n    public static _query: string = '_query';\n}\n\nexport class SearchControlParameters {\n\n}\n\nexport class FhirQueryBuilder {\n\n    private readonly _baseUrl: string = '';\n    private _resourceName: string;\n    private _params = [];\n    private _fhirOperation: number;\n\n    constructor(baseUrl?: string) {\n        this._baseUrl = baseUrl;\n    }\n\n    public static getInstance(baseUrl?: string): FhirQueryBuilder {\n        return new FhirQueryBuilder(baseUrl);\n    }\n\n    get resourceName(): string {\n        return this._resourceName;\n    }\n\n    setResourceName(resourceName: string): FhirQueryBuilder {\n        this._resourceName = resourceName;\n        return this;\n    }\n\n    get query(): string {\n        let q = `${this._baseUrl}`;\n        switch (this._fhirOperation) {\n            case TypeLevelInteractions.search:\n                q = `${q}/${this._resourceName}?`;\n                this.params.forEach(p => {\n                    q = q + p;\n                });\n                break;\n            case InstanceLevelInteractions.read:\n                q = `${q}/${this._resourceName}/`;\n                this.params.forEach(p => {\n                    q = q + p;\n                });\n                break;\n        }\n        return q;\n    }\n\n    read(id: string): FhirQueryBuilder {\n        this._fhirOperation = InstanceLevelInteractions.read;\n        this._params.push(id);\n        return this;\n    }\n\n    search(propName: string): LeftPart {\n        this._fhirOperation = TypeLevelInteractions.search;\n        const lp: LeftPart = new LeftPart(this);\n        lp.left = propName;\n        return lp;\n    }\n\n    get params(): any[] {\n        return this._params;\n    }\n\n    and(): FhirQueryBuilder {\n        this.params.push('&');\n        return this;\n    }\n\n    append(val: string): FhirQueryBuilder {\n        this.params.push(val);\n        return this;\n    }\n\n    paramsAsObject() {\n        const res = {};\n        for (const se of this.params) {\n            if (se === '&') continue;\n            const paramParts: string[] = se.split('=');\n            res[paramParts[0]] = paramParts[1];\n        }\n        return res;\n    }\n\n    paramsAsHttpParams(): HttpParams {\n        let res = new HttpParams();\n        for (const se of this.params) {\n            if (se === '&') continue;\n            const paramParts: string[] = se.split('=');\n            res = res.append(paramParts[0], paramParts[1]);\n        }\n        return res;\n    }\n}\n\nexport class LeftPart {\n    private readonly _qb: FhirQueryBuilder;\n    left: string;\n\n    constructor(qb: FhirQueryBuilder) {\n        this._qb = qb;\n    }\n\n    eq(val: string): FhirQueryBuilder {\n        this._qb.params.push(`${this.left}=${val}`);\n        return this._qb;\n    }\n\n    contains(val: string) {\n        this._qb.params.push(`${this.left}:contains=${val}`);\n        return this._qb;\n    }\n\n    starts(val: string) {\n        this._qb.params.push(`${this.left}=${val}`);\n        return this._qb;\n    }\n\n    exact(val: string) {\n        this._qb.params.push(`${this.left}:exact=${val}`);\n        return this._qb;\n    }\n}\n","import {SearchModifier} from './search-modifier';\n\nexport class SearchItem {\n    type: 'number' | 'date' | 'string' | 'token' | 'reference' | 'composite' | 'quantity' | 'uri' | 'special';\n    key: string;\n    modifier: SearchModifier;\n    value: string;\n    options: any;\n\n    public static init(type, key, modifier, value): SearchItem {\n        const item: SearchItem = new SearchItem();\n        item.type = type;\n        item.key = key;\n        item.modifier = modifier;\n        item.value = value;\n        return item;\n    }\n\n    setType(value: 'number' | 'date' | 'string' | 'token' | 'reference' | 'composite' | 'quantity' | 'uri' | 'special'): SearchItem {\n        this.type = value;\n        return this;\n    }\n\n    setKey(value: string): SearchItem {\n        this.key = value;\n        return this;\n    }\n\n    setModifier(value: SearchModifier): SearchItem {\n        this.modifier = value;\n        return this;\n    }\n\n    setValue(value: string): SearchItem {\n        this.value = value;\n        return this;\n    }\n\n    setOptions(value: any): SearchItem {\n        this.options = value;\n        return this;\n    }\n\n    compileKey(): string {\n        return this.modifier.compileKey(this);\n    }\n\n    compileValue(): string {\n        return this.modifier.compileValue(this);\n    }\n}\n","import { SearchModifier } from '../search-modifier';\nimport { SearchItem } from '../search-item';\n\nexport class EqualSearchModifier implements SearchModifier {\n    type: string;\n\n    compileKey(si: SearchItem): string {\n        return si.key;\n    }\n\n    compileValue(si: SearchItem): string {\n        return si.value;\n    }\n\n\n}\n","import { SearchModifier } from '../search-modifier';\nimport { SearchItem } from '../search-item';\n\nexport class StringContainsSearchModifier implements SearchModifier {\n  type: string;\n\n  compileKey(si: SearchItem): string {\n    return si.key + ':contains';\n  }\n\n  compileValue(si: SearchItem): string {\n    return si.value;\n  }\n}\n","import { SearchModifier } from '../search-modifier';\nimport { SearchItem } from '../search-item';\n\nexport class StringExactSearchModifier implements SearchModifier {\n  type: string;\n\n  compileKey(si: SearchItem): string {\n    return si.key + ':exact';\n  }\n\n  compileValue(si: SearchItem): string {\n    return si.value;\n  }\n}\n","import { EqualSearchModifier } from './modifiers/equal-search-modifier';\nimport { StringContainsSearchModifier } from './modifiers/string-contains-search-modifier';\nimport { StringExactSearchModifier } from './modifiers/string-exact-search-modifier';\n\nexport class SearchModifiers {\n  public static MODIFIERS = {\n    'EQUAL': new EqualSearchModifier(),\n    'STRING:CONTAINS': new StringContainsSearchModifier(),\n    'STRING:EXACT': new StringExactSearchModifier(),\n  };\n\n  public static STRING = [\n    {\n      key: '',\n      display: 'modifier_starts',\n    },\n    {\n      key: ':contains',\n      display: 'modifier_contains',\n    },\n    {\n      key: ':exact',\n      display: 'modifier_exact',\n    },\n  ];\n  public static TOKEN = [\n    {\n      key: '',\n      display: 'modifier_exact',\n    },\n    {\n      key: ':template',\n      display: 'modifier_text',\n    },\n    {\n      key: ':not',\n      display: 'modifier_not',\n    },\n    {\n      key: ':above',\n      display: 'modifier_above',\n    },\n    {\n      key: ':below',\n      display: 'modifier_below',\n    },\n    {\n      key: ':in',\n      display: 'modifier_in',\n    },\n    {\n      key: ':not-in',\n      display: 'modifier_notIn',\n    },\n  ];\n  public static DATE = [\n    {\n      key: 'eq',\n      display: 'modifier_exact',\n    },\n    {\n      key: 'ne',\n      display: 'modifier_not',\n    },\n    {\n      key: 'gt',\n      display: 'modifier_greater_than',\n    },\n    {\n      key: 'lt',\n      display: 'modifier_less_than',\n    },\n    {\n      key: 'ge',\n      display: 'modifier_greater_or_equal',\n    },\n    {\n      key: 'sa',\n      display: 'modifier_starts_after',\n    },\n    {\n      key: 'eb',\n      display: 'modifier_ends_before',\n    },\n    {\n      key: 'ap',\n      display: 'modifier_approximately',\n    },\n  ];\n  public static URI = [\n    {\n      key: '',\n      display: 'modifier_exact',\n    },\n    {\n      key: ':above',\n      display: 'modifier_starts',\n    },\n    {\n      key: ':below',\n      display: 'modifier_ends',\n    },\n  ];\n  public static REFERENCE = [\n    {\n      key: '',\n      display: 'modifier_ref',\n    },\n  ];\n}\n","import { SearchItem } from './search-item';\n\nexport interface SearchModifier {\n  type: string;\n  compileKey(si: SearchItem): string;\n  compileValue(si: SearchItem): string;\n}\n","import {SearchSet} from './search-set';\nimport {SearchItem} from './search-item';\n\nexport class SearchSetBuilder {\n\n    constructor(private ss: SearchSet) {\n    }\n\n    get(): SearchSet {\n        return this.ss;\n    }\n\n    setResourceName(resource: string): SearchSetBuilder {\n        this.ss.resourceName = resource;\n        return this;\n    }\n\n    setTitle(value: string): SearchSetBuilder {\n        this.ss.title = value;\n        return this;\n    }\n\n    setDescription(value: string): SearchSetBuilder {\n        this.ss.description = value;\n        return this;\n    }\n\n    setGetpagesoffset(value: number): SearchSetBuilder {\n        this.ss.getpagesoffset = value;\n        return this;\n    }\n\n    setCount(value: number): SearchSetBuilder {\n        this.ss.count = value;\n        return this;\n    }\n\n    addSearchItem(): SearchItem {\n        const si: SearchItem = new SearchItem();\n        this.ss.searchItems.push(si);\n        return si;\n    }\n}\n","import {SearchItem} from './search-item';\nimport {SearchSetBuilder} from './search-set-builder';\nimport {HttpParams} from '@angular/common/http';\n\nexport class SearchSet {\n\n    resourceName: string;\n    searchItems: Array<SearchItem> = [];\n    title: string;\n    description: string;\n    getpagesoffset: number;\n    count: number;\n    sort: string = '-_id';\n    direction: 'asc' | 'desc';\n\n    paramsAsObject() {\n        let so = new HttpParams();\n        for (const si of this.searchItems) {\n            so = so.append(si.compileKey(), si.compileValue());\n        }\n        if (this.getpagesoffset) so.append('_getpagesoffset', String(this.getpagesoffset));\n        if (this.count) so.append('_count', String(this.count));\n        so.append('_sort', '-_id');\n        return so;\n    }\n\n    build(): SearchSetBuilder {\n        return new SearchSetBuilder(this);\n    }\n}\n","export class ResourceTypes {\n    public static Address: string = 'Address';\n    public static Annotation: string = 'Annotation';\n    public static Appointment: string = 'Appointment';\n    public static AppointmentResponse: string = 'AppointmentResponse';\n    public static Attachment: string = 'Attachment';\n    public static BackboneElement: string = 'BackboneElement';\n    public static BodyStructure: string = 'BodyStructure';\n    public static Bundle: string = 'Bundle';\n    public static BundleEntry: string = 'BundleEntry';\n    public static CapabilityStatement: string = 'CapabilityStatement';\n    public static CodeableConcept: string = 'CodeableConcept';\n    public static CodeSystem: string = 'CodeSystem';\n    public static CodeSystemConcept: string = 'CodeSystemConcept';\n    public static Coding: string = 'Coding';\n    public static ConceptMap: string = 'ConceptMap';\n    public static ConceptMapDependsOn: string = 'ConceptMapDependsOn';\n    public static ContactDetail: string = 'ContactDetail';\n    public static ContactPoint: string = 'ContactPoint';\n    public static Contract: string = 'Contract';\n    public static DataRequirement: string = 'DataRequirement';\n    public static DiagnosticReport: string = 'DiagnosticReport';\n    public static DiagnosticsReferenceRange: string = 'DiagnosticsReferenceRange';\n    public static DomainResource: string = 'DomainResource';\n    public static Dosage: string = 'Dosage';\n    public static Duration: string = 'Duration';\n    public static Element: string = 'Element';\n    public static Encounter: string = 'Encounter';\n    public static Endpoint: string = 'Endpoint';\n    public static EpisodeOfCare: string = 'EpisodeOfCare';\n    public static Extension: string = 'Extension';\n    public static Flag: string = 'Flag';\n    public static Group: string = 'Group';\n    public static HealthcareService: string = 'HealthcareService';\n    public static HumanName: string = 'HumanName';\n    public static Identifier: string = 'Identifier';\n    public static ImagingStudy: string = 'ImagingStudy';\n    public static Library: string = 'Library';\n    public static List: string = 'List';\n    public static Location: string = 'Location';\n    public static Media: string = 'Media';\n    public static Medication: string = 'Medication';\n    public static MedicationAdministration: string = 'MedicationAdministration';\n    public static MedicationDispense: string = 'MedicationDispense';\n    public static MedicationKnowledge: string = 'MedicationKnowledge';\n    public static MedicationRequest: string = 'MedicationRequest';\n    public static MedicationStatement: string = 'MedicationStatement';\n    public static Meta: string = 'Meta';\n    public static MolecularSequence: string = 'MolecularSequence';\n    public static Money: string = 'Money';\n    public static NamingSystem: string = 'NamingSystem';\n    public static Narrative: string = 'Narrative';\n    public static Observation: string = 'Observation';\n    public static OperationOutcome: string = 'OperationOutcome';\n    public static Organization: string = 'Organization';\n    public static OrganizationAffiliation: string = 'OrganizationAffiliation';\n    public static ParameterDefinition: string = 'ParameterDefinition';\n    public static Patient: string = 'Patient';\n    public static Period: string = 'Period';\n    public static Person: string = 'Person';\n    public static Practitioner: string = 'Practitioner';\n    public static PractitionerRole: string = 'PractitionerRole';\n    public static Quantity: string = 'Quantity';\n    public static QuestionnaireResponse: string = 'QuestionnaireResponse';\n    public static QuestionnaireResponseItem: string = 'QuestionnaireResponseItem';\n    public static Range: string = 'Range';\n    public static Ratio: string = 'Ratio';\n    public static Reference: string = 'Reference';\n    public static RelatedArtifact: string = 'RelatedArtifact';\n    public static RelatedPerson: string = 'RelatedPerson';\n    public static Resource: string = 'Resource';\n    public static ResourceCapability: string = 'ResourceCapability';\n    public static SampledData: string = 'SampledData';\n    public static Schedule: string = 'Schedule';\n    public static Signature: string = 'Signature';\n    public static SimpleQuantity: string = 'SimpleQuantity';\n    public static Slot: string = 'Slot';\n    public static Specimen: string = 'Specimen';\n    public static Substance: string = 'Substance';\n    public static Task: string = 'Task';\n    public static TerminologyCapabilities: string = 'TerminologyCapabilities';\n    public static Timing: string = 'Timing';\n    public static UsageContext: string = 'UsageContext';\n    public static ValueSet: string = 'ValueSet';\n    public static ValueSetContains: string = 'ValueSetContains';\n    public static VerificationResult: string = 'VerificationResult';\n}\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}